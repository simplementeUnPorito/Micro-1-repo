#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels

// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)
// The pins for I2C are defined by the Wire-library. 
// On an arduino UNO:       A4(SDA), A5(SCL)
// On an arduino MEGA 2560: 20(SDA), 21(SCL)
// On an arduino LEONARDO:   2(SDA),  3(SCL), ...
#define OLED_RESET     -1 // Reset pin # (or -1 if sharing Arduino reset pin)
#define SCREEN_ADDRESS 0x3C ///< See datasheet for Address; 0x3D for 128x64, 0x3C for 128x32
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

#define MAX_FRAME 12
// 'frame_00_delay-0', 32x16px
const unsigned char epd_bitmap_frame_00_delay_0 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x30, 0x03, 0x80, 0x00, 0x00, 0x01, 0xc0, 0x00, 
	0x00, 0x07, 0xc0, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0xa8, 0x00, 
	0x00, 0x2b, 0xa8, 0x00, 0x00, 0x0a, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'frame_01_delay-0', 32x16px
const unsigned char epd_bitmap_frame_01_delay_0 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x20, 0x01, 0x80, 0x00, 0x00, 0x01, 0x80, 0x00, 
	0x00, 0x03, 0xc0, 0x00, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x01, 0xe0, 0x00, 0x00, 0x0d, 0xa0, 0x00, 
	0x00, 0x09, 0xb0, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1d, 0xff, 0xba, 0xf8, 
	0x15, 0xbd, 0x7b, 0xf8, 0x1f, 0xe7, 0xee, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'frame_02_delay-0', 32x16px
const unsigned char epd_bitmap_frame_02_delay_0 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x20, 0x01, 0x80, 0x00, 0x00, 0x01, 0x80, 0x00, 
	0x00, 0x03, 0xc0, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x0d, 0xa0, 0x00, 
	0x00, 0x09, 0xb0, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0xdf, 0x7f, 0xf8, 
	0x1d, 0xb6, 0xbe, 0xf8, 0x3f, 0x9e, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'frame_03_delay-0', 32x16px
const unsigned char epd_bitmap_frame_03_delay_0 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x20, 0x01, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 
	0x00, 0x03, 0xc0, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x0d, 0xa0, 0x00, 
	0x00, 0x09, 0xb0, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3d, 0xdf, 0x7f, 0xfc, 
	0x2d, 0x57, 0x5e, 0xfc, 0x3f, 0x5e, 0x7f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'frame_04_delay-0', 32x16px
const unsigned char epd_bitmap_frame_04_delay_0 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x20, 0x01, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 
	0x00, 0x03, 0xc0, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x0d, 0x20, 0x00, 
	0x00, 0x09, 0xb0, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3d, 0xdf, 0x7f, 0xf8, 
	0x2d, 0x57, 0x5e, 0xfc, 0x3f, 0x5e, 0x7f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'frame_05_delay-0', 32x16px
const unsigned char epd_bitmap_frame_05_delay_0 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x20, 0x01, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 
	0x00, 0x03, 0xc0, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x05, 0xe0, 0x00, 0x00, 0x0d, 0x20, 0x00, 
	0x00, 0x09, 0xb0, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3d, 0xdf, 0x7f, 0xfc, 
	0x2d, 0x57, 0x5e, 0xfc, 0x3f, 0x5e, 0x7f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'frame_06_delay-0', 32x16px
const unsigned char epd_bitmap_frame_06_delay_0 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x20, 0x01, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 
	0x00, 0x03, 0xc0, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x0d, 0x20, 0x00, 
	0x00, 0x09, 0xb0, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1d, 0xdf, 0x7f, 0xf8, 
	0x2d, 0x57, 0x5e, 0xfc, 0x3f, 0x5e, 0x7f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'frame_07_delay-0', 32x16px
const unsigned char epd_bitmap_frame_07_delay_0 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x20, 0x01, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 
	0x00, 0x03, 0xc0, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x0d, 0xa0, 0x00, 
	0x00, 0x09, 0xb0, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3d, 0xdf, 0x7f, 0xfc, 
	0x2d, 0x57, 0x5e, 0xfc, 0x3f, 0x5e, 0x7f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'frame_08_delay-0', 32x16px
const unsigned char epd_bitmap_frame_08_delay_0 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x20, 0x01, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 
	0x00, 0x03, 0xc0, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x05, 0xe0, 0x00, 0x00, 0x0d, 0xa0, 0x00, 
	0x00, 0x19, 0xb0, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3d, 0xdf, 0x7f, 0xfc, 
	0x2d, 0x57, 0x5e, 0xf8, 0x3f, 0x5e, 0x7f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'frame_09_delay-0', 32x16px
const unsigned char epd_bitmap_frame_09_delay_0 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x20, 0x01, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 
	0x00, 0x03, 0xc0, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x0d, 0xa0, 0x00, 
	0x00, 0x09, 0xb0, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1d, 0xdf, 0x7f, 0xf8, 
	0x2d, 0x57, 0x5e, 0xfc, 0x3f, 0x5e, 0x7f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'frame_10_delay-0', 32x16px
const unsigned char epd_bitmap_frame_10_delay_0 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x20, 0x01, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 
	0x00, 0x03, 0xc0, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x0d, 0xa0, 0x00, 
	0x00, 0x09, 0xb0, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3d, 0xdf, 0x7f, 0xfc, 
	0x2d, 0x57, 0x5e, 0xfc, 0x1f, 0x5e, 0x7f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'frame_11_delay-0', 32x16px
const unsigned char epd_bitmap_frame_11_delay_0 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x20, 0x01, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 
	0x00, 0x03, 0xc0, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x05, 0xe0, 0x00, 0x00, 0x0d, 0xa0, 0x00, 
	0x00, 0x09, 0xb0, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3d, 0xdf, 0x7f, 0xfc, 
	0x2d, 0x57, 0x5e, 0xfc, 0x3f, 0x5e, 0x7f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};


// Array of all bitmaps for convenience. (Total bytes used to store images in PROGMEM = 960)
const int epd_bitmap_allArray_LEN = 12;
const unsigned char* error[12] = {
	epd_bitmap_frame_00_delay_0,
	epd_bitmap_frame_01_delay_0,
	epd_bitmap_frame_02_delay_0,
	epd_bitmap_frame_03_delay_0,
	epd_bitmap_frame_04_delay_0,
	epd_bitmap_frame_05_delay_0,
	epd_bitmap_frame_06_delay_0,
	epd_bitmap_frame_07_delay_0,
	epd_bitmap_frame_08_delay_0,
	epd_bitmap_frame_09_delay_0,
	epd_bitmap_frame_10_delay_0,
	epd_bitmap_frame_11_delay_0
};






void setup() {
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);  
  display.display();
  display.clearDisplay();
  display.setTextSize(0);

  display.setFont();
   
  display.setTextColor(WHITE);

}
#define DELAY 0
#define MARGEN_X 0
#define MARGEN_Y 0



void showGift(const unsigned char* animation[MAX_FRAME],bool resetGift){
  static int i = 0;
  display.clearDisplay();
  display.drawBitmap(MARGEN_X, MARGEN_Y,animation[i++],32,16, 1);
  display.display();
  delay(DELAY);
  if(i>=MAX_FRAME-1)
    i = 0;
}

void loop() {
    
  showGift(epd_bitmap_frame_11_delay_0[11],false);
}
