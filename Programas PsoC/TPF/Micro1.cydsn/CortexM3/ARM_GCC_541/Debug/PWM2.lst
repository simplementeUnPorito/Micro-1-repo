ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PWM2.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	PWM2_initVar
  20              		.bss
  21              		.type	PWM2_initVar, %object
  22              		.size	PWM2_initVar, 1
  23              	PWM2_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.PWM2_Start,"ax",%progbits
  26              		.align	2
  27              		.global	PWM2_Start
  28              		.thumb
  29              		.thumb_func
  30              		.type	PWM2_Start, %function
  31              	PWM2_Start:
  32              	.LFB0:
  33              		.file 1 "Generated_Source\\PSoC5\\PWM2.c"
   1:Generated_Source\PSoC5/PWM2.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/PWM2.c **** * File Name: PWM2.c
   3:Generated_Source\PSoC5/PWM2.c **** * Version 3.30
   4:Generated_Source\PSoC5/PWM2.c **** *
   5:Generated_Source\PSoC5/PWM2.c **** * Description:
   6:Generated_Source\PSoC5/PWM2.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC5/PWM2.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC5/PWM2.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC5/PWM2.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC5/PWM2.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC5/PWM2.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC5/PWM2.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC5/PWM2.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC5/PWM2.c **** *
  15:Generated_Source\PSoC5/PWM2.c **** * Note:
  16:Generated_Source\PSoC5/PWM2.c **** *
  17:Generated_Source\PSoC5/PWM2.c **** *******************************************************************************
  18:Generated_Source\PSoC5/PWM2.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/PWM2.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/PWM2.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/PWM2.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/PWM2.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/PWM2.c **** 
  24:Generated_Source\PSoC5/PWM2.c **** #include "PWM2.h"
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 2


  25:Generated_Source\PSoC5/PWM2.c **** 
  26:Generated_Source\PSoC5/PWM2.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC5/PWM2.c **** #ifdef PWM2_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC5/PWM2.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC5/PWM2.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC5/PWM2.c **** #endif /* PWM2_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:Generated_Source\PSoC5/PWM2.c **** 
  32:Generated_Source\PSoC5/PWM2.c **** uint8 PWM2_initVar = 0u;
  33:Generated_Source\PSoC5/PWM2.c **** 
  34:Generated_Source\PSoC5/PWM2.c **** 
  35:Generated_Source\PSoC5/PWM2.c **** /*******************************************************************************
  36:Generated_Source\PSoC5/PWM2.c **** * Function Name: PWM2_Start
  37:Generated_Source\PSoC5/PWM2.c **** ********************************************************************************
  38:Generated_Source\PSoC5/PWM2.c **** *
  39:Generated_Source\PSoC5/PWM2.c **** * Summary:
  40:Generated_Source\PSoC5/PWM2.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC5/PWM2.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC5/PWM2.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC5/PWM2.c **** *
  44:Generated_Source\PSoC5/PWM2.c **** * Parameters:
  45:Generated_Source\PSoC5/PWM2.c **** *  None
  46:Generated_Source\PSoC5/PWM2.c **** *
  47:Generated_Source\PSoC5/PWM2.c **** * Return:
  48:Generated_Source\PSoC5/PWM2.c **** *  None
  49:Generated_Source\PSoC5/PWM2.c **** *
  50:Generated_Source\PSoC5/PWM2.c **** * Global variables:
  51:Generated_Source\PSoC5/PWM2.c **** *  PWM2_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC5/PWM2.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC5/PWM2.c **** *
  54:Generated_Source\PSoC5/PWM2.c **** *******************************************************************************/
  55:Generated_Source\PSoC5/PWM2.c **** void PWM2_Start(void) 
  56:Generated_Source\PSoC5/PWM2.c **** {
  34              		.loc 1 56 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
  43              		.cfi_def_cfa_register 7
  57:Generated_Source\PSoC5/PWM2.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC5/PWM2.c ****     if(PWM2_initVar == 0u)
  44              		.loc 1 58 0
  45 0004 064B     		ldr	r3, .L3
  46 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  47 0008 002B     		cmp	r3, #0
  48 000a 04D1     		bne	.L2
  59:Generated_Source\PSoC5/PWM2.c ****     {
  60:Generated_Source\PSoC5/PWM2.c ****         PWM2_Init();
  49              		.loc 1 60 0
  50 000c FFF7FEFF 		bl	PWM2_Init
  61:Generated_Source\PSoC5/PWM2.c ****         PWM2_initVar = 1u;
  51              		.loc 1 61 0
  52 0010 034B     		ldr	r3, .L3
  53 0012 0122     		movs	r2, #1
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 3


  54 0014 1A70     		strb	r2, [r3]
  55              	.L2:
  62:Generated_Source\PSoC5/PWM2.c ****     }
  63:Generated_Source\PSoC5/PWM2.c ****     PWM2_Enable();
  56              		.loc 1 63 0
  57 0016 FFF7FEFF 		bl	PWM2_Enable
  64:Generated_Source\PSoC5/PWM2.c **** 
  65:Generated_Source\PSoC5/PWM2.c **** }
  58              		.loc 1 65 0
  59 001a 00BF     		nop
  60 001c 80BD     		pop	{r7, pc}
  61              	.L4:
  62 001e 00BF     		.align	2
  63              	.L3:
  64 0020 00000000 		.word	PWM2_initVar
  65              		.cfi_endproc
  66              	.LFE0:
  67              		.size	PWM2_Start, .-PWM2_Start
  68              		.section	.text.PWM2_Init,"ax",%progbits
  69              		.align	2
  70              		.global	PWM2_Init
  71              		.thumb
  72              		.thumb_func
  73              		.type	PWM2_Init, %function
  74              	PWM2_Init:
  75              	.LFB1:
  66:Generated_Source\PSoC5/PWM2.c **** 
  67:Generated_Source\PSoC5/PWM2.c **** 
  68:Generated_Source\PSoC5/PWM2.c **** /*******************************************************************************
  69:Generated_Source\PSoC5/PWM2.c **** * Function Name: PWM2_Init
  70:Generated_Source\PSoC5/PWM2.c **** ********************************************************************************
  71:Generated_Source\PSoC5/PWM2.c **** *
  72:Generated_Source\PSoC5/PWM2.c **** * Summary:
  73:Generated_Source\PSoC5/PWM2.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC5/PWM2.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC5/PWM2.c **** *  PWM2_Start().
  76:Generated_Source\PSoC5/PWM2.c **** *
  77:Generated_Source\PSoC5/PWM2.c **** * Parameters:
  78:Generated_Source\PSoC5/PWM2.c **** *  None
  79:Generated_Source\PSoC5/PWM2.c **** *
  80:Generated_Source\PSoC5/PWM2.c **** * Return:
  81:Generated_Source\PSoC5/PWM2.c **** *  None
  82:Generated_Source\PSoC5/PWM2.c **** *
  83:Generated_Source\PSoC5/PWM2.c **** *******************************************************************************/
  84:Generated_Source\PSoC5/PWM2.c **** void PWM2_Init(void) 
  85:Generated_Source\PSoC5/PWM2.c **** {
  76              		.loc 1 85 0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 8
  79              		@ frame_needed = 1, uses_anonymous_args = 0
  80 0000 80B5     		push	{r7, lr}
  81              		.cfi_def_cfa_offset 8
  82              		.cfi_offset 7, -8
  83              		.cfi_offset 14, -4
  84 0002 82B0     		sub	sp, sp, #8
  85              		.cfi_def_cfa_offset 16
  86 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 4


  87              		.cfi_def_cfa_register 7
  86:Generated_Source\PSoC5/PWM2.c ****     #if (PWM2_UsingFixedFunction || PWM2_UseControl)
  87:Generated_Source\PSoC5/PWM2.c ****         uint8 ctrl;
  88:Generated_Source\PSoC5/PWM2.c ****     #endif /* (PWM2_UsingFixedFunction || PWM2_UseControl) */
  89:Generated_Source\PSoC5/PWM2.c **** 
  90:Generated_Source\PSoC5/PWM2.c ****     #if(!PWM2_UsingFixedFunction)
  91:Generated_Source\PSoC5/PWM2.c ****         #if(PWM2_UseStatus)
  92:Generated_Source\PSoC5/PWM2.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC5/PWM2.c ****             uint8 PWM2_interruptState;
  94:Generated_Source\PSoC5/PWM2.c ****         #endif /* (PWM2_UseStatus) */
  95:Generated_Source\PSoC5/PWM2.c ****     #endif /* (!PWM2_UsingFixedFunction) */
  96:Generated_Source\PSoC5/PWM2.c **** 
  97:Generated_Source\PSoC5/PWM2.c ****     #if (PWM2_UsingFixedFunction)
  98:Generated_Source\PSoC5/PWM2.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC5/PWM2.c ****         PWM2_CONTROL |= PWM2_CFG0_MODE;
 100:Generated_Source\PSoC5/PWM2.c ****         #if (PWM2_DeadBand2_4)
 101:Generated_Source\PSoC5/PWM2.c ****             PWM2_CONTROL |= PWM2_CFG0_DB;
 102:Generated_Source\PSoC5/PWM2.c ****         #endif /* (PWM2_DeadBand2_4) */
 103:Generated_Source\PSoC5/PWM2.c **** 
 104:Generated_Source\PSoC5/PWM2.c ****         ctrl = PWM2_CONTROL3 & ((uint8 )(~PWM2_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC5/PWM2.c ****         PWM2_CONTROL3 = ctrl | PWM2_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC5/PWM2.c **** 
 107:Generated_Source\PSoC5/PWM2.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC5/PWM2.c ****         PWM2_RT1 &= ((uint8)(~PWM2_RT1_MASK));
 109:Generated_Source\PSoC5/PWM2.c ****         PWM2_RT1 |= PWM2_SYNC;
 110:Generated_Source\PSoC5/PWM2.c **** 
 111:Generated_Source\PSoC5/PWM2.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC5/PWM2.c ****         PWM2_RT1 &= ((uint8)(~PWM2_SYNCDSI_MASK));
 113:Generated_Source\PSoC5/PWM2.c ****         PWM2_RT1 |= PWM2_SYNCDSI_EN;
 114:Generated_Source\PSoC5/PWM2.c **** 
 115:Generated_Source\PSoC5/PWM2.c ****     #elif (PWM2_UseControl)
 116:Generated_Source\PSoC5/PWM2.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC5/PWM2.c ****         ctrl = PWM2_CONTROL & ((uint8)(~PWM2_CTRL_CMPMODE2_MASK)) &
  88              		.loc 1 117 0
  89 0006 214B     		ldr	r3, .L6
  90 0008 1B78     		ldrb	r3, [r3]
  91 000a DBB2     		uxtb	r3, r3
  92 000c 23F03F03 		bic	r3, r3, #63
  93 0010 FB71     		strb	r3, [r7, #7]
 118:Generated_Source\PSoC5/PWM2.c ****                 ((uint8)(~PWM2_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC5/PWM2.c ****         PWM2_CONTROL = ctrl | PWM2_DEFAULT_COMPARE2_MODE |
  94              		.loc 1 119 0
  95 0012 1E4A     		ldr	r2, .L6
  96 0014 FB79     		ldrb	r3, [r7, #7]
  97 0016 43F00903 		orr	r3, r3, #9
  98 001a DBB2     		uxtb	r3, r3
  99 001c 1370     		strb	r3, [r2]
 120:Generated_Source\PSoC5/PWM2.c ****                                    PWM2_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC5/PWM2.c ****     #endif /* (PWM2_UsingFixedFunction) */
 122:Generated_Source\PSoC5/PWM2.c **** 
 123:Generated_Source\PSoC5/PWM2.c ****     #if (!PWM2_UsingFixedFunction)
 124:Generated_Source\PSoC5/PWM2.c ****         #if (PWM2_Resolution == 8)
 125:Generated_Source\PSoC5/PWM2.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC5/PWM2.c ****             PWM2_AUX_CONTROLDP0 |= (PWM2_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC5/PWM2.c ****         #else /* (PWM2_Resolution == 16)*/
 128:Generated_Source\PSoC5/PWM2.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC5/PWM2.c ****             PWM2_AUX_CONTROLDP0 |= (PWM2_AUX_CTRL_FIFO0_CLR);
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 5


 100              		.loc 1 129 0
 101 001e 1C4A     		ldr	r2, .L6+4
 102 0020 1B4B     		ldr	r3, .L6+4
 103 0022 1B78     		ldrb	r3, [r3]
 104 0024 DBB2     		uxtb	r3, r3
 105 0026 43F00103 		orr	r3, r3, #1
 106 002a DBB2     		uxtb	r3, r3
 107 002c 1370     		strb	r3, [r2]
 130:Generated_Source\PSoC5/PWM2.c ****             PWM2_AUX_CONTROLDP1 |= (PWM2_AUX_CTRL_FIFO0_CLR);
 108              		.loc 1 130 0
 109 002e 194A     		ldr	r2, .L6+8
 110 0030 184B     		ldr	r3, .L6+8
 111 0032 1B78     		ldrb	r3, [r3]
 112 0034 DBB2     		uxtb	r3, r3
 113 0036 43F00103 		orr	r3, r3, #1
 114 003a DBB2     		uxtb	r3, r3
 115 003c 1370     		strb	r3, [r2]
 131:Generated_Source\PSoC5/PWM2.c ****         #endif /* (PWM2_Resolution == 8) */
 132:Generated_Source\PSoC5/PWM2.c **** 
 133:Generated_Source\PSoC5/PWM2.c ****         PWM2_WriteCounter(PWM2_INIT_PERIOD_VALUE);
 116              		.loc 1 133 0
 117 003e 40F69F70 		movw	r0, #3999
 118 0042 FFF7FEFF 		bl	PWM2_WriteCounter
 134:Generated_Source\PSoC5/PWM2.c ****     #endif /* (!PWM2_UsingFixedFunction) */
 135:Generated_Source\PSoC5/PWM2.c **** 
 136:Generated_Source\PSoC5/PWM2.c ****     PWM2_WritePeriod(PWM2_INIT_PERIOD_VALUE);
 119              		.loc 1 136 0
 120 0046 40F69F70 		movw	r0, #3999
 121 004a FFF7FEFF 		bl	PWM2_WritePeriod
 137:Generated_Source\PSoC5/PWM2.c **** 
 138:Generated_Source\PSoC5/PWM2.c ****         #if (PWM2_UseOneCompareMode)
 139:Generated_Source\PSoC5/PWM2.c ****             PWM2_WriteCompare(PWM2_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC5/PWM2.c ****         #else
 141:Generated_Source\PSoC5/PWM2.c ****             PWM2_WriteCompare1(PWM2_INIT_COMPARE_VALUE1);
 122              		.loc 1 141 0
 123 004e C720     		movs	r0, #199
 124 0050 FFF7FEFF 		bl	PWM2_WriteCompare1
 142:Generated_Source\PSoC5/PWM2.c ****             PWM2_WriteCompare2(PWM2_INIT_COMPARE_VALUE2);
 125              		.loc 1 142 0
 126 0054 C720     		movs	r0, #199
 127 0056 FFF7FEFF 		bl	PWM2_WriteCompare2
 143:Generated_Source\PSoC5/PWM2.c ****         #endif /* (PWM2_UseOneCompareMode) */
 144:Generated_Source\PSoC5/PWM2.c **** 
 145:Generated_Source\PSoC5/PWM2.c ****         #if (PWM2_KillModeMinTime)
 146:Generated_Source\PSoC5/PWM2.c ****             PWM2_WriteKillTime(PWM2_MinimumKillTime);
 147:Generated_Source\PSoC5/PWM2.c ****         #endif /* (PWM2_KillModeMinTime) */
 148:Generated_Source\PSoC5/PWM2.c **** 
 149:Generated_Source\PSoC5/PWM2.c ****         #if (PWM2_DeadBandUsed)
 150:Generated_Source\PSoC5/PWM2.c ****             PWM2_WriteDeadTime(PWM2_INIT_DEAD_TIME);
 151:Generated_Source\PSoC5/PWM2.c ****         #endif /* (PWM2_DeadBandUsed) */
 152:Generated_Source\PSoC5/PWM2.c **** 
 153:Generated_Source\PSoC5/PWM2.c ****     #if (PWM2_UseStatus || PWM2_UsingFixedFunction)
 154:Generated_Source\PSoC5/PWM2.c ****         PWM2_SetInterruptMode(PWM2_INIT_INTERRUPTS_MODE);
 128              		.loc 1 154 0
 129 005a 0020     		movs	r0, #0
 130 005c FFF7FEFF 		bl	PWM2_SetInterruptMode
 155:Generated_Source\PSoC5/PWM2.c ****     #endif /* (PWM2_UseStatus || PWM2_UsingFixedFunction) */
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 6


 156:Generated_Source\PSoC5/PWM2.c **** 
 157:Generated_Source\PSoC5/PWM2.c ****     #if (PWM2_UsingFixedFunction)
 158:Generated_Source\PSoC5/PWM2.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC5/PWM2.c ****         PWM2_GLOBAL_ENABLE |= PWM2_BLOCK_EN_MASK;
 160:Generated_Source\PSoC5/PWM2.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC5/PWM2.c ****         PWM2_CONTROL2 |= PWM2_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC5/PWM2.c ****     #else
 163:Generated_Source\PSoC5/PWM2.c ****         #if(PWM2_UseStatus)
 164:Generated_Source\PSoC5/PWM2.c **** 
 165:Generated_Source\PSoC5/PWM2.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC5/PWM2.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC5/PWM2.c ****             PWM2_interruptState = CyEnterCriticalSection();
 131              		.loc 1 167 0
 132 0060 FFF7FEFF 		bl	CyEnterCriticalSection
 133 0064 0346     		mov	r3, r0
 134 0066 BB71     		strb	r3, [r7, #6]
 168:Generated_Source\PSoC5/PWM2.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC5/PWM2.c ****             PWM2_STATUS_AUX_CTRL |= PWM2_STATUS_ACTL_INT_EN_MASK;
 135              		.loc 1 169 0
 136 0068 0A4A     		ldr	r2, .L6+8
 137 006a 0A4B     		ldr	r3, .L6+8
 138 006c 1B78     		ldrb	r3, [r3]
 139 006e DBB2     		uxtb	r3, r3
 140 0070 43F01003 		orr	r3, r3, #16
 141 0074 DBB2     		uxtb	r3, r3
 142 0076 1370     		strb	r3, [r2]
 170:Generated_Source\PSoC5/PWM2.c **** 
 171:Generated_Source\PSoC5/PWM2.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC5/PWM2.c ****             CyExitCriticalSection(PWM2_interruptState);
 143              		.loc 1 172 0
 144 0078 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 145 007a 1846     		mov	r0, r3
 146 007c FFF7FEFF 		bl	CyExitCriticalSection
 173:Generated_Source\PSoC5/PWM2.c **** 
 174:Generated_Source\PSoC5/PWM2.c ****             /* Clear the FIFO to enable the PWM2_STATUS_FIFOFULL
 175:Generated_Source\PSoC5/PWM2.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC5/PWM2.c ****             PWM2_ClearFIFO();
 147              		.loc 1 176 0
 148 0080 FFF7FEFF 		bl	PWM2_ClearFIFO
 177:Generated_Source\PSoC5/PWM2.c ****         #endif /* (PWM2_UseStatus) */
 178:Generated_Source\PSoC5/PWM2.c ****     #endif /* (PWM2_UsingFixedFunction) */
 179:Generated_Source\PSoC5/PWM2.c **** }
 149              		.loc 1 179 0
 150 0084 00BF     		nop
 151 0086 0837     		adds	r7, r7, #8
 152              		.cfi_def_cfa_offset 8
 153 0088 BD46     		mov	sp, r7
 154              		.cfi_def_cfa_register 13
 155              		@ sp needed
 156 008a 80BD     		pop	{r7, pc}
 157              	.L7:
 158              		.align	2
 159              	.L6:
 160 008c 73640040 		.word	1073767539
 161 0090 92640040 		.word	1073767570
 162 0094 93640040 		.word	1073767571
 163              		.cfi_endproc
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 7


 164              	.LFE1:
 165              		.size	PWM2_Init, .-PWM2_Init
 166              		.section	.text.PWM2_Enable,"ax",%progbits
 167              		.align	2
 168              		.global	PWM2_Enable
 169              		.thumb
 170              		.thumb_func
 171              		.type	PWM2_Enable, %function
 172              	PWM2_Enable:
 173              	.LFB2:
 180:Generated_Source\PSoC5/PWM2.c **** 
 181:Generated_Source\PSoC5/PWM2.c **** 
 182:Generated_Source\PSoC5/PWM2.c **** /*******************************************************************************
 183:Generated_Source\PSoC5/PWM2.c **** * Function Name: PWM2_Enable
 184:Generated_Source\PSoC5/PWM2.c **** ********************************************************************************
 185:Generated_Source\PSoC5/PWM2.c **** *
 186:Generated_Source\PSoC5/PWM2.c **** * Summary:
 187:Generated_Source\PSoC5/PWM2.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC5/PWM2.c **** *
 189:Generated_Source\PSoC5/PWM2.c **** * Parameters:
 190:Generated_Source\PSoC5/PWM2.c **** *  None
 191:Generated_Source\PSoC5/PWM2.c **** *
 192:Generated_Source\PSoC5/PWM2.c **** * Return:
 193:Generated_Source\PSoC5/PWM2.c **** *  None
 194:Generated_Source\PSoC5/PWM2.c **** *
 195:Generated_Source\PSoC5/PWM2.c **** * Side Effects:
 196:Generated_Source\PSoC5/PWM2.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC5/PWM2.c **** *
 198:Generated_Source\PSoC5/PWM2.c **** *******************************************************************************/
 199:Generated_Source\PSoC5/PWM2.c **** void PWM2_Enable(void) 
 200:Generated_Source\PSoC5/PWM2.c **** {
 174              		.loc 1 200 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 1, uses_anonymous_args = 0
 178              		@ link register save eliminated.
 179 0000 80B4     		push	{r7}
 180              		.cfi_def_cfa_offset 4
 181              		.cfi_offset 7, -4
 182 0002 00AF     		add	r7, sp, #0
 183              		.cfi_def_cfa_register 7
 201:Generated_Source\PSoC5/PWM2.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC5/PWM2.c ****     #if (PWM2_UsingFixedFunction)
 203:Generated_Source\PSoC5/PWM2.c ****         PWM2_GLOBAL_ENABLE |= PWM2_BLOCK_EN_MASK;
 204:Generated_Source\PSoC5/PWM2.c ****         PWM2_GLOBAL_STBY_ENABLE |= PWM2_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC5/PWM2.c ****     #endif /* (PWM2_UsingFixedFunction) */
 206:Generated_Source\PSoC5/PWM2.c **** 
 207:Generated_Source\PSoC5/PWM2.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC5/PWM2.c ****     #if (PWM2_UseControl || PWM2_UsingFixedFunction)
 209:Generated_Source\PSoC5/PWM2.c ****         PWM2_CONTROL |= PWM2_CTRL_ENABLE;
 184              		.loc 1 209 0
 185 0004 054A     		ldr	r2, .L9
 186 0006 054B     		ldr	r3, .L9
 187 0008 1B78     		ldrb	r3, [r3]
 188 000a DBB2     		uxtb	r3, r3
 189 000c 63F07F03 		orn	r3, r3, #127
 190 0010 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 8


 191 0012 1370     		strb	r3, [r2]
 210:Generated_Source\PSoC5/PWM2.c ****     #endif /* (PWM2_UseControl || PWM2_UsingFixedFunction) */
 211:Generated_Source\PSoC5/PWM2.c **** }
 192              		.loc 1 211 0
 193 0014 00BF     		nop
 194 0016 BD46     		mov	sp, r7
 195              		.cfi_def_cfa_register 13
 196              		@ sp needed
 197 0018 80BC     		pop	{r7}
 198              		.cfi_restore 7
 199              		.cfi_def_cfa_offset 0
 200 001a 7047     		bx	lr
 201              	.L10:
 202              		.align	2
 203              	.L9:
 204 001c 73640040 		.word	1073767539
 205              		.cfi_endproc
 206              	.LFE2:
 207              		.size	PWM2_Enable, .-PWM2_Enable
 208              		.section	.text.PWM2_Stop,"ax",%progbits
 209              		.align	2
 210              		.global	PWM2_Stop
 211              		.thumb
 212              		.thumb_func
 213              		.type	PWM2_Stop, %function
 214              	PWM2_Stop:
 215              	.LFB3:
 212:Generated_Source\PSoC5/PWM2.c **** 
 213:Generated_Source\PSoC5/PWM2.c **** 
 214:Generated_Source\PSoC5/PWM2.c **** /*******************************************************************************
 215:Generated_Source\PSoC5/PWM2.c **** * Function Name: PWM2_Stop
 216:Generated_Source\PSoC5/PWM2.c **** ********************************************************************************
 217:Generated_Source\PSoC5/PWM2.c **** *
 218:Generated_Source\PSoC5/PWM2.c **** * Summary:
 219:Generated_Source\PSoC5/PWM2.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC5/PWM2.c **** *  interrupts.
 221:Generated_Source\PSoC5/PWM2.c **** *
 222:Generated_Source\PSoC5/PWM2.c **** * Parameters:
 223:Generated_Source\PSoC5/PWM2.c **** *  None
 224:Generated_Source\PSoC5/PWM2.c **** *
 225:Generated_Source\PSoC5/PWM2.c **** * Return:
 226:Generated_Source\PSoC5/PWM2.c **** *  None
 227:Generated_Source\PSoC5/PWM2.c **** *
 228:Generated_Source\PSoC5/PWM2.c **** * Side Effects:
 229:Generated_Source\PSoC5/PWM2.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC5/PWM2.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC5/PWM2.c **** *
 232:Generated_Source\PSoC5/PWM2.c **** *******************************************************************************/
 233:Generated_Source\PSoC5/PWM2.c **** void PWM2_Stop(void) 
 234:Generated_Source\PSoC5/PWM2.c **** {
 216              		.loc 1 234 0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 1, uses_anonymous_args = 0
 220              		@ link register save eliminated.
 221 0000 80B4     		push	{r7}
 222              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 9


 223              		.cfi_offset 7, -4
 224 0002 00AF     		add	r7, sp, #0
 225              		.cfi_def_cfa_register 7
 235:Generated_Source\PSoC5/PWM2.c ****     #if (PWM2_UseControl || PWM2_UsingFixedFunction)
 236:Generated_Source\PSoC5/PWM2.c ****         PWM2_CONTROL &= ((uint8)(~PWM2_CTRL_ENABLE));
 226              		.loc 1 236 0
 227 0004 054A     		ldr	r2, .L12
 228 0006 054B     		ldr	r3, .L12
 229 0008 1B78     		ldrb	r3, [r3]
 230 000a DBB2     		uxtb	r3, r3
 231 000c 03F07F03 		and	r3, r3, #127
 232 0010 DBB2     		uxtb	r3, r3
 233 0012 1370     		strb	r3, [r2]
 237:Generated_Source\PSoC5/PWM2.c ****     #endif /* (PWM2_UseControl || PWM2_UsingFixedFunction) */
 238:Generated_Source\PSoC5/PWM2.c **** 
 239:Generated_Source\PSoC5/PWM2.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC5/PWM2.c ****     #if (PWM2_UsingFixedFunction)
 241:Generated_Source\PSoC5/PWM2.c ****         PWM2_GLOBAL_ENABLE &= ((uint8)(~PWM2_BLOCK_EN_MASK));
 242:Generated_Source\PSoC5/PWM2.c ****         PWM2_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM2_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC5/PWM2.c ****     #endif /* (PWM2_UsingFixedFunction) */
 244:Generated_Source\PSoC5/PWM2.c **** }
 234              		.loc 1 244 0
 235 0014 00BF     		nop
 236 0016 BD46     		mov	sp, r7
 237              		.cfi_def_cfa_register 13
 238              		@ sp needed
 239 0018 80BC     		pop	{r7}
 240              		.cfi_restore 7
 241              		.cfi_def_cfa_offset 0
 242 001a 7047     		bx	lr
 243              	.L13:
 244              		.align	2
 245              	.L12:
 246 001c 73640040 		.word	1073767539
 247              		.cfi_endproc
 248              	.LFE3:
 249              		.size	PWM2_Stop, .-PWM2_Stop
 250              		.section	.text.PWM2_WriteCounter,"ax",%progbits
 251              		.align	2
 252              		.global	PWM2_WriteCounter
 253              		.thumb
 254              		.thumb_func
 255              		.type	PWM2_WriteCounter, %function
 256              	PWM2_WriteCounter:
 257              	.LFB4:
 245:Generated_Source\PSoC5/PWM2.c **** 
 246:Generated_Source\PSoC5/PWM2.c **** #if (PWM2_UseOneCompareMode)
 247:Generated_Source\PSoC5/PWM2.c ****     #if (PWM2_CompareMode1SW)
 248:Generated_Source\PSoC5/PWM2.c **** 
 249:Generated_Source\PSoC5/PWM2.c **** 
 250:Generated_Source\PSoC5/PWM2.c ****         /*******************************************************************************
 251:Generated_Source\PSoC5/PWM2.c ****         * Function Name: PWM2_SetCompareMode
 252:Generated_Source\PSoC5/PWM2.c ****         ********************************************************************************
 253:Generated_Source\PSoC5/PWM2.c ****         *
 254:Generated_Source\PSoC5/PWM2.c ****         * Summary:
 255:Generated_Source\PSoC5/PWM2.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC5/PWM2.c ****         *  Center Align Mode or One Output Mode.
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 10


 257:Generated_Source\PSoC5/PWM2.c ****         *
 258:Generated_Source\PSoC5/PWM2.c ****         * Parameters:
 259:Generated_Source\PSoC5/PWM2.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC5/PWM2.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC5/PWM2.c ****         *
 262:Generated_Source\PSoC5/PWM2.c ****         * Return:
 263:Generated_Source\PSoC5/PWM2.c ****         *  None
 264:Generated_Source\PSoC5/PWM2.c ****         *
 265:Generated_Source\PSoC5/PWM2.c ****         *******************************************************************************/
 266:Generated_Source\PSoC5/PWM2.c ****         void PWM2_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC5/PWM2.c ****         {
 268:Generated_Source\PSoC5/PWM2.c ****             #if(PWM2_UsingFixedFunction)
 269:Generated_Source\PSoC5/PWM2.c **** 
 270:Generated_Source\PSoC5/PWM2.c ****                 #if(0 != PWM2_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC5/PWM2.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM2_CTRL_CMPMODE1_SHI
 272:Generated_Source\PSoC5/PWM2.c ****                 #else
 273:Generated_Source\PSoC5/PWM2.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC5/PWM2.c ****                 #endif /* (0 != PWM2_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC5/PWM2.c **** 
 276:Generated_Source\PSoC5/PWM2.c ****                 PWM2_CONTROL3 &= ((uint8)(~PWM2_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:Generated_Source\PSoC5/PWM2.c ****                 PWM2_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC5/PWM2.c **** 
 279:Generated_Source\PSoC5/PWM2.c ****             #elif (PWM2_UseControl)
 280:Generated_Source\PSoC5/PWM2.c **** 
 281:Generated_Source\PSoC5/PWM2.c ****                 #if(0 != PWM2_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC5/PWM2.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM2_CTRL_CMPMODE1_SH
 283:Generated_Source\PSoC5/PWM2.c ****                                                 PWM2_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC5/PWM2.c ****                 #else
 285:Generated_Source\PSoC5/PWM2.c ****                     uint8 comparemode1masked = comparemode & PWM2_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC5/PWM2.c ****                 #endif /* (0 != PWM2_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC5/PWM2.c **** 
 288:Generated_Source\PSoC5/PWM2.c ****                 #if(0 != PWM2_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC5/PWM2.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM2_CTRL_CMPMODE2_SH
 290:Generated_Source\PSoC5/PWM2.c ****                                                PWM2_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC5/PWM2.c ****                 #else
 292:Generated_Source\PSoC5/PWM2.c ****                     uint8 comparemode2masked = comparemode & PWM2_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC5/PWM2.c ****                 #endif /* (0 != PWM2_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC5/PWM2.c **** 
 295:Generated_Source\PSoC5/PWM2.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC5/PWM2.c ****                 PWM2_CONTROL &= ((uint8)(~(PWM2_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC5/PWM2.c ****                                             PWM2_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC5/PWM2.c ****                 PWM2_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC5/PWM2.c **** 
 300:Generated_Source\PSoC5/PWM2.c ****             #else
 301:Generated_Source\PSoC5/PWM2.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC5/PWM2.c ****             #endif /* (PWM2_UsingFixedFunction) */
 303:Generated_Source\PSoC5/PWM2.c ****         }
 304:Generated_Source\PSoC5/PWM2.c ****     #endif /* PWM2_CompareMode1SW */
 305:Generated_Source\PSoC5/PWM2.c **** 
 306:Generated_Source\PSoC5/PWM2.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC5/PWM2.c **** 
 308:Generated_Source\PSoC5/PWM2.c ****     #if (PWM2_CompareMode1SW)
 309:Generated_Source\PSoC5/PWM2.c **** 
 310:Generated_Source\PSoC5/PWM2.c **** 
 311:Generated_Source\PSoC5/PWM2.c ****         /*******************************************************************************
 312:Generated_Source\PSoC5/PWM2.c ****         * Function Name: PWM2_SetCompareMode1
 313:Generated_Source\PSoC5/PWM2.c ****         ********************************************************************************
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 11


 314:Generated_Source\PSoC5/PWM2.c ****         *
 315:Generated_Source\PSoC5/PWM2.c ****         * Summary:
 316:Generated_Source\PSoC5/PWM2.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC5/PWM2.c ****         *
 318:Generated_Source\PSoC5/PWM2.c ****         * Parameters:
 319:Generated_Source\PSoC5/PWM2.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC5/PWM2.c ****         *                defined in the H file as input arguments.
 321:Generated_Source\PSoC5/PWM2.c ****         *
 322:Generated_Source\PSoC5/PWM2.c ****         * Return:
 323:Generated_Source\PSoC5/PWM2.c ****         *  None
 324:Generated_Source\PSoC5/PWM2.c ****         *
 325:Generated_Source\PSoC5/PWM2.c ****         *******************************************************************************/
 326:Generated_Source\PSoC5/PWM2.c ****         void PWM2_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC5/PWM2.c ****         {
 328:Generated_Source\PSoC5/PWM2.c ****             #if(0 != PWM2_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC5/PWM2.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM2_CTRL_CMPMODE1_SHIFT))
 330:Generated_Source\PSoC5/PWM2.c ****                                            PWM2_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC5/PWM2.c ****             #else
 332:Generated_Source\PSoC5/PWM2.c ****                 uint8 comparemodemasked = comparemode & PWM2_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC5/PWM2.c ****             #endif /* (0 != PWM2_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC5/PWM2.c **** 
 335:Generated_Source\PSoC5/PWM2.c ****             #if (PWM2_UseControl)
 336:Generated_Source\PSoC5/PWM2.c ****                 PWM2_CONTROL &= ((uint8)(~PWM2_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:Generated_Source\PSoC5/PWM2.c ****                 PWM2_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC5/PWM2.c ****             #endif /* (PWM2_UseControl) */
 339:Generated_Source\PSoC5/PWM2.c ****         }
 340:Generated_Source\PSoC5/PWM2.c ****     #endif /* PWM2_CompareMode1SW */
 341:Generated_Source\PSoC5/PWM2.c **** 
 342:Generated_Source\PSoC5/PWM2.c **** #if (PWM2_CompareMode2SW)
 343:Generated_Source\PSoC5/PWM2.c **** 
 344:Generated_Source\PSoC5/PWM2.c **** 
 345:Generated_Source\PSoC5/PWM2.c ****     /*******************************************************************************
 346:Generated_Source\PSoC5/PWM2.c ****     * Function Name: PWM2_SetCompareMode2
 347:Generated_Source\PSoC5/PWM2.c ****     ********************************************************************************
 348:Generated_Source\PSoC5/PWM2.c ****     *
 349:Generated_Source\PSoC5/PWM2.c ****     * Summary:
 350:Generated_Source\PSoC5/PWM2.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC5/PWM2.c ****     *
 352:Generated_Source\PSoC5/PWM2.c ****     * Parameters:
 353:Generated_Source\PSoC5/PWM2.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC5/PWM2.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC5/PWM2.c ****     *
 356:Generated_Source\PSoC5/PWM2.c ****     * Return:
 357:Generated_Source\PSoC5/PWM2.c ****     *  None
 358:Generated_Source\PSoC5/PWM2.c ****     *
 359:Generated_Source\PSoC5/PWM2.c ****     *******************************************************************************/
 360:Generated_Source\PSoC5/PWM2.c ****     void PWM2_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC5/PWM2.c ****     {
 362:Generated_Source\PSoC5/PWM2.c **** 
 363:Generated_Source\PSoC5/PWM2.c ****         #if(0 != PWM2_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC5/PWM2.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM2_CTRL_CMPMODE2_SHIFT)) &
 365:Generated_Source\PSoC5/PWM2.c ****                                                  PWM2_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC5/PWM2.c ****         #else
 367:Generated_Source\PSoC5/PWM2.c ****             uint8 comparemodemasked = comparemode & PWM2_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC5/PWM2.c ****         #endif /* (0 != PWM2_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC5/PWM2.c **** 
 370:Generated_Source\PSoC5/PWM2.c ****         #if (PWM2_UseControl)
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 12


 371:Generated_Source\PSoC5/PWM2.c ****             PWM2_CONTROL &= ((uint8)(~PWM2_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:Generated_Source\PSoC5/PWM2.c ****             PWM2_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC5/PWM2.c ****         #endif /* (PWM2_UseControl) */
 374:Generated_Source\PSoC5/PWM2.c ****     }
 375:Generated_Source\PSoC5/PWM2.c ****     #endif /*PWM2_CompareMode2SW */
 376:Generated_Source\PSoC5/PWM2.c **** 
 377:Generated_Source\PSoC5/PWM2.c **** #endif /* UseOneCompareMode */
 378:Generated_Source\PSoC5/PWM2.c **** 
 379:Generated_Source\PSoC5/PWM2.c **** 
 380:Generated_Source\PSoC5/PWM2.c **** #if (!PWM2_UsingFixedFunction)
 381:Generated_Source\PSoC5/PWM2.c **** 
 382:Generated_Source\PSoC5/PWM2.c **** 
 383:Generated_Source\PSoC5/PWM2.c ****     /*******************************************************************************
 384:Generated_Source\PSoC5/PWM2.c ****     * Function Name: PWM2_WriteCounter
 385:Generated_Source\PSoC5/PWM2.c ****     ********************************************************************************
 386:Generated_Source\PSoC5/PWM2.c ****     *
 387:Generated_Source\PSoC5/PWM2.c ****     * Summary:
 388:Generated_Source\PSoC5/PWM2.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC5/PWM2.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC5/PWM2.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC5/PWM2.c ****     *  PWM implementation.
 392:Generated_Source\PSoC5/PWM2.c ****     *
 393:Generated_Source\PSoC5/PWM2.c ****     * Parameters:
 394:Generated_Source\PSoC5/PWM2.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC5/PWM2.c ****     *
 396:Generated_Source\PSoC5/PWM2.c ****     * Return:
 397:Generated_Source\PSoC5/PWM2.c ****     *  None
 398:Generated_Source\PSoC5/PWM2.c ****     *
 399:Generated_Source\PSoC5/PWM2.c ****     * Side Effects:
 400:Generated_Source\PSoC5/PWM2.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC5/PWM2.c ****     *
 402:Generated_Source\PSoC5/PWM2.c ****     *******************************************************************************/
 403:Generated_Source\PSoC5/PWM2.c ****     void PWM2_WriteCounter(uint16 counter) \
 404:Generated_Source\PSoC5/PWM2.c ****                                        
 405:Generated_Source\PSoC5/PWM2.c ****     {
 258              		.loc 1 405 0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 8
 261              		@ frame_needed = 1, uses_anonymous_args = 0
 262              		@ link register save eliminated.
 263 0000 80B4     		push	{r7}
 264              		.cfi_def_cfa_offset 4
 265              		.cfi_offset 7, -4
 266 0002 83B0     		sub	sp, sp, #12
 267              		.cfi_def_cfa_offset 16
 268 0004 00AF     		add	r7, sp, #0
 269              		.cfi_def_cfa_register 7
 270 0006 0346     		mov	r3, r0
 271 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 406:Generated_Source\PSoC5/PWM2.c ****         CY_SET_REG16(PWM2_COUNTER_LSB_PTR, counter);
 272              		.loc 1 406 0
 273 000a 044A     		ldr	r2, .L15
 274 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 275 000e 1380     		strh	r3, [r2]	@ movhi
 407:Generated_Source\PSoC5/PWM2.c ****     }
 276              		.loc 1 407 0
 277 0010 00BF     		nop
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 13


 278 0012 0C37     		adds	r7, r7, #12
 279              		.cfi_def_cfa_offset 4
 280 0014 BD46     		mov	sp, r7
 281              		.cfi_def_cfa_register 13
 282              		@ sp needed
 283 0016 80BC     		pop	{r7}
 284              		.cfi_restore 7
 285              		.cfi_def_cfa_offset 0
 286 0018 7047     		bx	lr
 287              	.L16:
 288 001a 00BF     		.align	2
 289              	.L15:
 290 001c 04680040 		.word	1073768452
 291              		.cfi_endproc
 292              	.LFE4:
 293              		.size	PWM2_WriteCounter, .-PWM2_WriteCounter
 294              		.section	.text.PWM2_ReadCounter,"ax",%progbits
 295              		.align	2
 296              		.global	PWM2_ReadCounter
 297              		.thumb
 298              		.thumb_func
 299              		.type	PWM2_ReadCounter, %function
 300              	PWM2_ReadCounter:
 301              	.LFB5:
 408:Generated_Source\PSoC5/PWM2.c **** 
 409:Generated_Source\PSoC5/PWM2.c **** 
 410:Generated_Source\PSoC5/PWM2.c ****     /*******************************************************************************
 411:Generated_Source\PSoC5/PWM2.c ****     * Function Name: PWM2_ReadCounter
 412:Generated_Source\PSoC5/PWM2.c ****     ********************************************************************************
 413:Generated_Source\PSoC5/PWM2.c ****     *
 414:Generated_Source\PSoC5/PWM2.c ****     * Summary:
 415:Generated_Source\PSoC5/PWM2.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC5/PWM2.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC5/PWM2.c ****     *
 418:Generated_Source\PSoC5/PWM2.c ****     * Parameters:
 419:Generated_Source\PSoC5/PWM2.c ****     *  None
 420:Generated_Source\PSoC5/PWM2.c ****     *
 421:Generated_Source\PSoC5/PWM2.c ****     * Return:
 422:Generated_Source\PSoC5/PWM2.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC5/PWM2.c ****     *
 424:Generated_Source\PSoC5/PWM2.c ****     *******************************************************************************/
 425:Generated_Source\PSoC5/PWM2.c ****     uint16 PWM2_ReadCounter(void) 
 426:Generated_Source\PSoC5/PWM2.c ****     {
 302              		.loc 1 426 0
 303              		.cfi_startproc
 304              		@ args = 0, pretend = 0, frame = 0
 305              		@ frame_needed = 1, uses_anonymous_args = 0
 306              		@ link register save eliminated.
 307 0000 80B4     		push	{r7}
 308              		.cfi_def_cfa_offset 4
 309              		.cfi_offset 7, -4
 310 0002 00AF     		add	r7, sp, #0
 311              		.cfi_def_cfa_register 7
 427:Generated_Source\PSoC5/PWM2.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC5/PWM2.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC5/PWM2.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC5/PWM2.c ****           (void)CY_GET_REG8(PWM2_COUNTERCAP_LSB_PTR_8BIT);
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 14


 312              		.loc 1 430 0
 313 0004 044B     		ldr	r3, .L19
 314 0006 1B78     		ldrb	r3, [r3]
 431:Generated_Source\PSoC5/PWM2.c **** 
 432:Generated_Source\PSoC5/PWM2.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC5/PWM2.c ****         return (CY_GET_REG16(PWM2_CAPTURE_LSB_PTR));
 315              		.loc 1 433 0
 316 0008 044B     		ldr	r3, .L19+4
 317 000a 1B88     		ldrh	r3, [r3]	@ movhi
 318 000c 9BB2     		uxth	r3, r3
 434:Generated_Source\PSoC5/PWM2.c ****     }
 319              		.loc 1 434 0
 320 000e 1846     		mov	r0, r3
 321 0010 BD46     		mov	sp, r7
 322              		.cfi_def_cfa_register 13
 323              		@ sp needed
 324 0012 80BC     		pop	{r7}
 325              		.cfi_restore 7
 326              		.cfi_def_cfa_offset 0
 327 0014 7047     		bx	lr
 328              	.L20:
 329 0016 00BF     		.align	2
 330              	.L19:
 331 0018 12640040 		.word	1073767442
 332 001c A4680040 		.word	1073768612
 333              		.cfi_endproc
 334              	.LFE5:
 335              		.size	PWM2_ReadCounter, .-PWM2_ReadCounter
 336              		.section	.text.PWM2_ClearFIFO,"ax",%progbits
 337              		.align	2
 338              		.global	PWM2_ClearFIFO
 339              		.thumb
 340              		.thumb_func
 341              		.type	PWM2_ClearFIFO, %function
 342              	PWM2_ClearFIFO:
 343              	.LFB6:
 435:Generated_Source\PSoC5/PWM2.c **** 
 436:Generated_Source\PSoC5/PWM2.c ****     #if (PWM2_UseStatus)
 437:Generated_Source\PSoC5/PWM2.c **** 
 438:Generated_Source\PSoC5/PWM2.c **** 
 439:Generated_Source\PSoC5/PWM2.c ****         /*******************************************************************************
 440:Generated_Source\PSoC5/PWM2.c ****         * Function Name: PWM2_ClearFIFO
 441:Generated_Source\PSoC5/PWM2.c ****         ********************************************************************************
 442:Generated_Source\PSoC5/PWM2.c ****         *
 443:Generated_Source\PSoC5/PWM2.c ****         * Summary:
 444:Generated_Source\PSoC5/PWM2.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC5/PWM2.c ****         *
 446:Generated_Source\PSoC5/PWM2.c ****         * Parameters:
 447:Generated_Source\PSoC5/PWM2.c ****         *  None
 448:Generated_Source\PSoC5/PWM2.c ****         *
 449:Generated_Source\PSoC5/PWM2.c ****         * Return:
 450:Generated_Source\PSoC5/PWM2.c ****         *  None
 451:Generated_Source\PSoC5/PWM2.c ****         *
 452:Generated_Source\PSoC5/PWM2.c ****         *******************************************************************************/
 453:Generated_Source\PSoC5/PWM2.c ****         void PWM2_ClearFIFO(void) 
 454:Generated_Source\PSoC5/PWM2.c ****         {
 344              		.loc 1 454 0
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 15


 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 1, uses_anonymous_args = 0
 348 0000 80B5     		push	{r7, lr}
 349              		.cfi_def_cfa_offset 8
 350              		.cfi_offset 7, -8
 351              		.cfi_offset 14, -4
 352 0002 00AF     		add	r7, sp, #0
 353              		.cfi_def_cfa_register 7
 455:Generated_Source\PSoC5/PWM2.c ****             while(0u != (PWM2_ReadStatusRegister() & PWM2_STATUS_FIFONEMPTY))
 354              		.loc 1 455 0
 355 0004 01E0     		b	.L22
 356              	.L23:
 456:Generated_Source\PSoC5/PWM2.c ****             {
 457:Generated_Source\PSoC5/PWM2.c ****                 (void)PWM2_ReadCapture();
 357              		.loc 1 457 0
 358 0006 FFF7FEFF 		bl	PWM2_ReadCapture
 359              	.L22:
 455:Generated_Source\PSoC5/PWM2.c ****             while(0u != (PWM2_ReadStatusRegister() & PWM2_STATUS_FIFONEMPTY))
 360              		.loc 1 455 0
 361 000a FFF7FEFF 		bl	PWM2_ReadStatusRegister
 362 000e 0346     		mov	r3, r0
 363 0010 03F01003 		and	r3, r3, #16
 364 0014 002B     		cmp	r3, #0
 365 0016 F6D1     		bne	.L23
 458:Generated_Source\PSoC5/PWM2.c ****             }
 459:Generated_Source\PSoC5/PWM2.c ****         }
 366              		.loc 1 459 0
 367 0018 00BF     		nop
 368 001a 80BD     		pop	{r7, pc}
 369              		.cfi_endproc
 370              	.LFE6:
 371              		.size	PWM2_ClearFIFO, .-PWM2_ClearFIFO
 372              		.section	.text.PWM2_WritePeriod,"ax",%progbits
 373              		.align	2
 374              		.global	PWM2_WritePeriod
 375              		.thumb
 376              		.thumb_func
 377              		.type	PWM2_WritePeriod, %function
 378              	PWM2_WritePeriod:
 379              	.LFB7:
 460:Generated_Source\PSoC5/PWM2.c **** 
 461:Generated_Source\PSoC5/PWM2.c ****     #endif /* PWM2_UseStatus */
 462:Generated_Source\PSoC5/PWM2.c **** 
 463:Generated_Source\PSoC5/PWM2.c **** #endif /* !PWM2_UsingFixedFunction */
 464:Generated_Source\PSoC5/PWM2.c **** 
 465:Generated_Source\PSoC5/PWM2.c **** 
 466:Generated_Source\PSoC5/PWM2.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/PWM2.c **** * Function Name: PWM2_WritePeriod
 468:Generated_Source\PSoC5/PWM2.c **** ********************************************************************************
 469:Generated_Source\PSoC5/PWM2.c **** *
 470:Generated_Source\PSoC5/PWM2.c **** * Summary:
 471:Generated_Source\PSoC5/PWM2.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC5/PWM2.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC5/PWM2.c **** *
 474:Generated_Source\PSoC5/PWM2.c **** * Parameters:
 475:Generated_Source\PSoC5/PWM2.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 16


 476:Generated_Source\PSoC5/PWM2.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC5/PWM2.c **** *
 478:Generated_Source\PSoC5/PWM2.c **** * Return:
 479:Generated_Source\PSoC5/PWM2.c **** *  None
 480:Generated_Source\PSoC5/PWM2.c **** *
 481:Generated_Source\PSoC5/PWM2.c **** *******************************************************************************/
 482:Generated_Source\PSoC5/PWM2.c **** void PWM2_WritePeriod(uint16 period) 
 483:Generated_Source\PSoC5/PWM2.c **** {
 380              		.loc 1 483 0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 8
 383              		@ frame_needed = 1, uses_anonymous_args = 0
 384              		@ link register save eliminated.
 385 0000 80B4     		push	{r7}
 386              		.cfi_def_cfa_offset 4
 387              		.cfi_offset 7, -4
 388 0002 83B0     		sub	sp, sp, #12
 389              		.cfi_def_cfa_offset 16
 390 0004 00AF     		add	r7, sp, #0
 391              		.cfi_def_cfa_register 7
 392 0006 0346     		mov	r3, r0
 393 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 484:Generated_Source\PSoC5/PWM2.c ****     #if(PWM2_UsingFixedFunction)
 485:Generated_Source\PSoC5/PWM2.c ****         CY_SET_REG16(PWM2_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC5/PWM2.c ****     #else
 487:Generated_Source\PSoC5/PWM2.c ****         CY_SET_REG16(PWM2_PERIOD_LSB_PTR, period);
 394              		.loc 1 487 0
 395 000a 044A     		ldr	r2, .L25
 396 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 397 000e 1380     		strh	r3, [r2]	@ movhi
 488:Generated_Source\PSoC5/PWM2.c ****     #endif /* (PWM2_UsingFixedFunction) */
 489:Generated_Source\PSoC5/PWM2.c **** }
 398              		.loc 1 489 0
 399 0010 00BF     		nop
 400 0012 0C37     		adds	r7, r7, #12
 401              		.cfi_def_cfa_offset 4
 402 0014 BD46     		mov	sp, r7
 403              		.cfi_def_cfa_register 13
 404              		@ sp needed
 405 0016 80BC     		pop	{r7}
 406              		.cfi_restore 7
 407              		.cfi_def_cfa_offset 0
 408 0018 7047     		bx	lr
 409              	.L26:
 410 001a 00BF     		.align	2
 411              	.L25:
 412 001c 84680040 		.word	1073768580
 413              		.cfi_endproc
 414              	.LFE7:
 415              		.size	PWM2_WritePeriod, .-PWM2_WritePeriod
 416              		.section	.text.PWM2_WriteCompare1,"ax",%progbits
 417              		.align	2
 418              		.global	PWM2_WriteCompare1
 419              		.thumb
 420              		.thumb_func
 421              		.type	PWM2_WriteCompare1, %function
 422              	PWM2_WriteCompare1:
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 17


 423              	.LFB8:
 490:Generated_Source\PSoC5/PWM2.c **** 
 491:Generated_Source\PSoC5/PWM2.c **** #if (PWM2_UseOneCompareMode)
 492:Generated_Source\PSoC5/PWM2.c **** 
 493:Generated_Source\PSoC5/PWM2.c **** 
 494:Generated_Source\PSoC5/PWM2.c ****     /*******************************************************************************
 495:Generated_Source\PSoC5/PWM2.c ****     * Function Name: PWM2_WriteCompare
 496:Generated_Source\PSoC5/PWM2.c ****     ********************************************************************************
 497:Generated_Source\PSoC5/PWM2.c ****     *
 498:Generated_Source\PSoC5/PWM2.c ****     * Summary:
 499:Generated_Source\PSoC5/PWM2.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC5/PWM2.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC5/PWM2.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC5/PWM2.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC5/PWM2.c ****     *  Dither Mode.
 504:Generated_Source\PSoC5/PWM2.c ****     *
 505:Generated_Source\PSoC5/PWM2.c ****     * Parameters:
 506:Generated_Source\PSoC5/PWM2.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC5/PWM2.c ****     *
 508:Generated_Source\PSoC5/PWM2.c ****     * Return:
 509:Generated_Source\PSoC5/PWM2.c ****     *  None
 510:Generated_Source\PSoC5/PWM2.c ****     *
 511:Generated_Source\PSoC5/PWM2.c ****     * Side Effects:
 512:Generated_Source\PSoC5/PWM2.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC5/PWM2.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC5/PWM2.c ****     *
 515:Generated_Source\PSoC5/PWM2.c ****     *******************************************************************************/
 516:Generated_Source\PSoC5/PWM2.c ****     void PWM2_WriteCompare(uint16 compare) \
 517:Generated_Source\PSoC5/PWM2.c ****                                        
 518:Generated_Source\PSoC5/PWM2.c ****     {
 519:Generated_Source\PSoC5/PWM2.c ****         #if(PWM2_UsingFixedFunction)
 520:Generated_Source\PSoC5/PWM2.c ****             CY_SET_REG16(PWM2_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC5/PWM2.c ****         #else
 522:Generated_Source\PSoC5/PWM2.c ****             CY_SET_REG16(PWM2_COMPARE1_LSB_PTR, compare);
 523:Generated_Source\PSoC5/PWM2.c ****         #endif /* (PWM2_UsingFixedFunction) */
 524:Generated_Source\PSoC5/PWM2.c **** 
 525:Generated_Source\PSoC5/PWM2.c ****         #if (PWM2_PWMMode == PWM2__B_PWM__DITHER)
 526:Generated_Source\PSoC5/PWM2.c ****             #if(PWM2_UsingFixedFunction)
 527:Generated_Source\PSoC5/PWM2.c ****                 CY_SET_REG16(PWM2_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC5/PWM2.c ****             #else
 529:Generated_Source\PSoC5/PWM2.c ****                 CY_SET_REG16(PWM2_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC5/PWM2.c ****             #endif /* (PWM2_UsingFixedFunction) */
 531:Generated_Source\PSoC5/PWM2.c ****         #endif /* (PWM2_PWMMode == PWM2__B_PWM__DITHER) */
 532:Generated_Source\PSoC5/PWM2.c ****     }
 533:Generated_Source\PSoC5/PWM2.c **** 
 534:Generated_Source\PSoC5/PWM2.c **** 
 535:Generated_Source\PSoC5/PWM2.c **** #else
 536:Generated_Source\PSoC5/PWM2.c **** 
 537:Generated_Source\PSoC5/PWM2.c **** 
 538:Generated_Source\PSoC5/PWM2.c ****     /*******************************************************************************
 539:Generated_Source\PSoC5/PWM2.c ****     * Function Name: PWM2_WriteCompare1
 540:Generated_Source\PSoC5/PWM2.c ****     ********************************************************************************
 541:Generated_Source\PSoC5/PWM2.c ****     *
 542:Generated_Source\PSoC5/PWM2.c ****     * Summary:
 543:Generated_Source\PSoC5/PWM2.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC5/PWM2.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC5/PWM2.c ****     *  driven high when the present counter value is less than or less than or
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 18


 546:Generated_Source\PSoC5/PWM2.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC5/PWM2.c ****     *
 548:Generated_Source\PSoC5/PWM2.c ****     * Parameters:
 549:Generated_Source\PSoC5/PWM2.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC5/PWM2.c ****     *
 551:Generated_Source\PSoC5/PWM2.c ****     * Return:
 552:Generated_Source\PSoC5/PWM2.c ****     *  None
 553:Generated_Source\PSoC5/PWM2.c ****     *
 554:Generated_Source\PSoC5/PWM2.c ****     *******************************************************************************/
 555:Generated_Source\PSoC5/PWM2.c ****     void PWM2_WriteCompare1(uint16 compare) \
 556:Generated_Source\PSoC5/PWM2.c ****                                         
 557:Generated_Source\PSoC5/PWM2.c ****     {
 424              		.loc 1 557 0
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 8
 427              		@ frame_needed = 1, uses_anonymous_args = 0
 428              		@ link register save eliminated.
 429 0000 80B4     		push	{r7}
 430              		.cfi_def_cfa_offset 4
 431              		.cfi_offset 7, -4
 432 0002 83B0     		sub	sp, sp, #12
 433              		.cfi_def_cfa_offset 16
 434 0004 00AF     		add	r7, sp, #0
 435              		.cfi_def_cfa_register 7
 436 0006 0346     		mov	r3, r0
 437 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 558:Generated_Source\PSoC5/PWM2.c ****         #if(PWM2_UsingFixedFunction)
 559:Generated_Source\PSoC5/PWM2.c ****             CY_SET_REG16(PWM2_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC5/PWM2.c ****         #else
 561:Generated_Source\PSoC5/PWM2.c ****             CY_SET_REG16(PWM2_COMPARE1_LSB_PTR, compare);
 438              		.loc 1 561 0
 439 000a 044A     		ldr	r2, .L28
 440 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 441 000e 1380     		strh	r3, [r2]	@ movhi
 562:Generated_Source\PSoC5/PWM2.c ****         #endif /* (PWM2_UsingFixedFunction) */
 563:Generated_Source\PSoC5/PWM2.c ****     }
 442              		.loc 1 563 0
 443 0010 00BF     		nop
 444 0012 0C37     		adds	r7, r7, #12
 445              		.cfi_def_cfa_offset 4
 446 0014 BD46     		mov	sp, r7
 447              		.cfi_def_cfa_register 13
 448              		@ sp needed
 449 0016 80BC     		pop	{r7}
 450              		.cfi_restore 7
 451              		.cfi_def_cfa_offset 0
 452 0018 7047     		bx	lr
 453              	.L29:
 454 001a 00BF     		.align	2
 455              	.L28:
 456 001c 44680040 		.word	1073768516
 457              		.cfi_endproc
 458              	.LFE8:
 459              		.size	PWM2_WriteCompare1, .-PWM2_WriteCompare1
 460              		.section	.text.PWM2_WriteCompare2,"ax",%progbits
 461              		.align	2
 462              		.global	PWM2_WriteCompare2
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 19


 463              		.thumb
 464              		.thumb_func
 465              		.type	PWM2_WriteCompare2, %function
 466              	PWM2_WriteCompare2:
 467              	.LFB9:
 564:Generated_Source\PSoC5/PWM2.c **** 
 565:Generated_Source\PSoC5/PWM2.c **** 
 566:Generated_Source\PSoC5/PWM2.c ****     /*******************************************************************************
 567:Generated_Source\PSoC5/PWM2.c ****     * Function Name: PWM2_WriteCompare2
 568:Generated_Source\PSoC5/PWM2.c ****     ********************************************************************************
 569:Generated_Source\PSoC5/PWM2.c ****     *
 570:Generated_Source\PSoC5/PWM2.c ****     * Summary:
 571:Generated_Source\PSoC5/PWM2.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC5/PWM2.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC5/PWM2.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC5/PWM2.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC5/PWM2.c ****     *  mode.
 576:Generated_Source\PSoC5/PWM2.c ****     *
 577:Generated_Source\PSoC5/PWM2.c ****     * Parameters:
 578:Generated_Source\PSoC5/PWM2.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC5/PWM2.c ****     *
 580:Generated_Source\PSoC5/PWM2.c ****     * Return:
 581:Generated_Source\PSoC5/PWM2.c ****     *  None
 582:Generated_Source\PSoC5/PWM2.c ****     *
 583:Generated_Source\PSoC5/PWM2.c ****     *******************************************************************************/
 584:Generated_Source\PSoC5/PWM2.c ****     void PWM2_WriteCompare2(uint16 compare) \
 585:Generated_Source\PSoC5/PWM2.c ****                                         
 586:Generated_Source\PSoC5/PWM2.c ****     {
 468              		.loc 1 586 0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 8
 471              		@ frame_needed = 1, uses_anonymous_args = 0
 472              		@ link register save eliminated.
 473 0000 80B4     		push	{r7}
 474              		.cfi_def_cfa_offset 4
 475              		.cfi_offset 7, -4
 476 0002 83B0     		sub	sp, sp, #12
 477              		.cfi_def_cfa_offset 16
 478 0004 00AF     		add	r7, sp, #0
 479              		.cfi_def_cfa_register 7
 480 0006 0346     		mov	r3, r0
 481 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 587:Generated_Source\PSoC5/PWM2.c ****         #if(PWM2_UsingFixedFunction)
 588:Generated_Source\PSoC5/PWM2.c ****             CY_SET_REG16(PWM2_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC5/PWM2.c ****         #else
 590:Generated_Source\PSoC5/PWM2.c ****             CY_SET_REG16(PWM2_COMPARE2_LSB_PTR, compare);
 482              		.loc 1 590 0
 483 000a 044A     		ldr	r2, .L31
 484 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 485 000e 1380     		strh	r3, [r2]	@ movhi
 591:Generated_Source\PSoC5/PWM2.c ****         #endif /* (PWM2_UsingFixedFunction) */
 592:Generated_Source\PSoC5/PWM2.c ****     }
 486              		.loc 1 592 0
 487 0010 00BF     		nop
 488 0012 0C37     		adds	r7, r7, #12
 489              		.cfi_def_cfa_offset 4
 490 0014 BD46     		mov	sp, r7
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 20


 491              		.cfi_def_cfa_register 13
 492              		@ sp needed
 493 0016 80BC     		pop	{r7}
 494              		.cfi_restore 7
 495              		.cfi_def_cfa_offset 0
 496 0018 7047     		bx	lr
 497              	.L32:
 498 001a 00BF     		.align	2
 499              	.L31:
 500 001c 64680040 		.word	1073768548
 501              		.cfi_endproc
 502              	.LFE9:
 503              		.size	PWM2_WriteCompare2, .-PWM2_WriteCompare2
 504              		.section	.text.PWM2_SetInterruptMode,"ax",%progbits
 505              		.align	2
 506              		.global	PWM2_SetInterruptMode
 507              		.thumb
 508              		.thumb_func
 509              		.type	PWM2_SetInterruptMode, %function
 510              	PWM2_SetInterruptMode:
 511              	.LFB10:
 593:Generated_Source\PSoC5/PWM2.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC5/PWM2.c **** 
 595:Generated_Source\PSoC5/PWM2.c **** #if (PWM2_DeadBandUsed)
 596:Generated_Source\PSoC5/PWM2.c **** 
 597:Generated_Source\PSoC5/PWM2.c **** 
 598:Generated_Source\PSoC5/PWM2.c ****     /*******************************************************************************
 599:Generated_Source\PSoC5/PWM2.c ****     * Function Name: PWM2_WriteDeadTime
 600:Generated_Source\PSoC5/PWM2.c ****     ********************************************************************************
 601:Generated_Source\PSoC5/PWM2.c ****     *
 602:Generated_Source\PSoC5/PWM2.c ****     * Summary:
 603:Generated_Source\PSoC5/PWM2.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC5/PWM2.c ****     *
 605:Generated_Source\PSoC5/PWM2.c ****     * Parameters:
 606:Generated_Source\PSoC5/PWM2.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC5/PWM2.c ****     *
 608:Generated_Source\PSoC5/PWM2.c ****     * Return:
 609:Generated_Source\PSoC5/PWM2.c ****     *  None
 610:Generated_Source\PSoC5/PWM2.c ****     *
 611:Generated_Source\PSoC5/PWM2.c ****     *******************************************************************************/
 612:Generated_Source\PSoC5/PWM2.c ****     void PWM2_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC5/PWM2.c ****     {
 614:Generated_Source\PSoC5/PWM2.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC5/PWM2.c ****         #if(!PWM2_DeadBand2_4)
 616:Generated_Source\PSoC5/PWM2.c ****             CY_SET_REG8(PWM2_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC5/PWM2.c ****         #else
 618:Generated_Source\PSoC5/PWM2.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC5/PWM2.c ****             /* Clear existing data */
 620:Generated_Source\PSoC5/PWM2.c ****             PWM2_DEADBAND_COUNT &= ((uint8)(~PWM2_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC5/PWM2.c **** 
 622:Generated_Source\PSoC5/PWM2.c ****             /* Set new dead time */
 623:Generated_Source\PSoC5/PWM2.c ****             #if(PWM2_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC5/PWM2.c ****                 PWM2_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM2_DEADBAND_COUNT_SHIFT)) &
 625:Generated_Source\PSoC5/PWM2.c ****                                                     PWM2_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC5/PWM2.c ****             #else
 627:Generated_Source\PSoC5/PWM2.c ****                 PWM2_DEADBAND_COUNT |= deadtime & PWM2_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC5/PWM2.c ****             #endif /* (PWM2_DEADBAND_COUNT_SHIFT) */
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 21


 629:Generated_Source\PSoC5/PWM2.c **** 
 630:Generated_Source\PSoC5/PWM2.c ****         #endif /* (!PWM2_DeadBand2_4) */
 631:Generated_Source\PSoC5/PWM2.c ****     }
 632:Generated_Source\PSoC5/PWM2.c **** 
 633:Generated_Source\PSoC5/PWM2.c **** 
 634:Generated_Source\PSoC5/PWM2.c ****     /*******************************************************************************
 635:Generated_Source\PSoC5/PWM2.c ****     * Function Name: PWM2_ReadDeadTime
 636:Generated_Source\PSoC5/PWM2.c ****     ********************************************************************************
 637:Generated_Source\PSoC5/PWM2.c ****     *
 638:Generated_Source\PSoC5/PWM2.c ****     * Summary:
 639:Generated_Source\PSoC5/PWM2.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC5/PWM2.c ****     *
 641:Generated_Source\PSoC5/PWM2.c ****     * Parameters:
 642:Generated_Source\PSoC5/PWM2.c ****     *  None
 643:Generated_Source\PSoC5/PWM2.c ****     *
 644:Generated_Source\PSoC5/PWM2.c ****     * Return:
 645:Generated_Source\PSoC5/PWM2.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC5/PWM2.c ****     *
 647:Generated_Source\PSoC5/PWM2.c ****     *******************************************************************************/
 648:Generated_Source\PSoC5/PWM2.c ****     uint8 PWM2_ReadDeadTime(void) 
 649:Generated_Source\PSoC5/PWM2.c ****     {
 650:Generated_Source\PSoC5/PWM2.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC5/PWM2.c ****         #if(!PWM2_DeadBand2_4)
 652:Generated_Source\PSoC5/PWM2.c ****             return (CY_GET_REG8(PWM2_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC5/PWM2.c ****         #else
 654:Generated_Source\PSoC5/PWM2.c **** 
 655:Generated_Source\PSoC5/PWM2.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC5/PWM2.c ****             #if(PWM2_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC5/PWM2.c ****                 return ((uint8)(((uint8)(PWM2_DEADBAND_COUNT & PWM2_DEADBAND_COUNT_MASK)) >>
 658:Generated_Source\PSoC5/PWM2.c ****                                                                            PWM2_DEADBAND_COUNT_SHIF
 659:Generated_Source\PSoC5/PWM2.c ****             #else
 660:Generated_Source\PSoC5/PWM2.c ****                 return (PWM2_DEADBAND_COUNT & PWM2_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC5/PWM2.c ****             #endif /* (PWM2_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC5/PWM2.c ****         #endif /* (!PWM2_DeadBand2_4) */
 663:Generated_Source\PSoC5/PWM2.c ****     }
 664:Generated_Source\PSoC5/PWM2.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC5/PWM2.c **** 
 666:Generated_Source\PSoC5/PWM2.c **** #if (PWM2_UseStatus || PWM2_UsingFixedFunction)
 667:Generated_Source\PSoC5/PWM2.c **** 
 668:Generated_Source\PSoC5/PWM2.c **** 
 669:Generated_Source\PSoC5/PWM2.c ****     /*******************************************************************************
 670:Generated_Source\PSoC5/PWM2.c ****     * Function Name: PWM2_SetInterruptMode
 671:Generated_Source\PSoC5/PWM2.c ****     ********************************************************************************
 672:Generated_Source\PSoC5/PWM2.c ****     *
 673:Generated_Source\PSoC5/PWM2.c ****     * Summary:
 674:Generated_Source\PSoC5/PWM2.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC5/PWM2.c ****     *  source status register.
 676:Generated_Source\PSoC5/PWM2.c ****     *
 677:Generated_Source\PSoC5/PWM2.c ****     * Parameters:
 678:Generated_Source\PSoC5/PWM2.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC5/PWM2.c ****     *
 680:Generated_Source\PSoC5/PWM2.c ****     * Return:
 681:Generated_Source\PSoC5/PWM2.c ****     *  None
 682:Generated_Source\PSoC5/PWM2.c ****     *
 683:Generated_Source\PSoC5/PWM2.c ****     *******************************************************************************/
 684:Generated_Source\PSoC5/PWM2.c ****     void PWM2_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC5/PWM2.c ****     {
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 22


 512              		.loc 1 685 0
 513              		.cfi_startproc
 514              		@ args = 0, pretend = 0, frame = 8
 515              		@ frame_needed = 1, uses_anonymous_args = 0
 516              		@ link register save eliminated.
 517 0000 80B4     		push	{r7}
 518              		.cfi_def_cfa_offset 4
 519              		.cfi_offset 7, -4
 520 0002 83B0     		sub	sp, sp, #12
 521              		.cfi_def_cfa_offset 16
 522 0004 00AF     		add	r7, sp, #0
 523              		.cfi_def_cfa_register 7
 524 0006 0346     		mov	r3, r0
 525 0008 FB71     		strb	r3, [r7, #7]
 686:Generated_Source\PSoC5/PWM2.c ****         CY_SET_REG8(PWM2_STATUS_MASK_PTR, interruptMode);
 526              		.loc 1 686 0
 527 000a 044A     		ldr	r2, .L34
 528 000c FB79     		ldrb	r3, [r7, #7]
 529 000e 1370     		strb	r3, [r2]
 687:Generated_Source\PSoC5/PWM2.c ****     }
 530              		.loc 1 687 0
 531 0010 00BF     		nop
 532 0012 0C37     		adds	r7, r7, #12
 533              		.cfi_def_cfa_offset 4
 534 0014 BD46     		mov	sp, r7
 535              		.cfi_def_cfa_register 13
 536              		@ sp needed
 537 0016 80BC     		pop	{r7}
 538              		.cfi_restore 7
 539              		.cfi_def_cfa_offset 0
 540 0018 7047     		bx	lr
 541              	.L35:
 542 001a 00BF     		.align	2
 543              	.L34:
 544 001c 83640040 		.word	1073767555
 545              		.cfi_endproc
 546              	.LFE10:
 547              		.size	PWM2_SetInterruptMode, .-PWM2_SetInterruptMode
 548              		.section	.text.PWM2_ReadStatusRegister,"ax",%progbits
 549              		.align	2
 550              		.global	PWM2_ReadStatusRegister
 551              		.thumb
 552              		.thumb_func
 553              		.type	PWM2_ReadStatusRegister, %function
 554              	PWM2_ReadStatusRegister:
 555              	.LFB11:
 688:Generated_Source\PSoC5/PWM2.c **** 
 689:Generated_Source\PSoC5/PWM2.c **** 
 690:Generated_Source\PSoC5/PWM2.c ****     /*******************************************************************************
 691:Generated_Source\PSoC5/PWM2.c ****     * Function Name: PWM2_ReadStatusRegister
 692:Generated_Source\PSoC5/PWM2.c ****     ********************************************************************************
 693:Generated_Source\PSoC5/PWM2.c ****     *
 694:Generated_Source\PSoC5/PWM2.c ****     * Summary:
 695:Generated_Source\PSoC5/PWM2.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC5/PWM2.c ****     *
 697:Generated_Source\PSoC5/PWM2.c ****     * Parameters:
 698:Generated_Source\PSoC5/PWM2.c ****     *  None
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 23


 699:Generated_Source\PSoC5/PWM2.c ****     *
 700:Generated_Source\PSoC5/PWM2.c ****     * Return:
 701:Generated_Source\PSoC5/PWM2.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC5/PWM2.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC5/PWM2.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC5/PWM2.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC5/PWM2.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC5/PWM2.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC5/PWM2.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC5/PWM2.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC5/PWM2.c ****     *
 710:Generated_Source\PSoC5/PWM2.c ****     *******************************************************************************/
 711:Generated_Source\PSoC5/PWM2.c ****     uint8 PWM2_ReadStatusRegister(void) 
 712:Generated_Source\PSoC5/PWM2.c ****     {
 556              		.loc 1 712 0
 557              		.cfi_startproc
 558              		@ args = 0, pretend = 0, frame = 0
 559              		@ frame_needed = 1, uses_anonymous_args = 0
 560              		@ link register save eliminated.
 561 0000 80B4     		push	{r7}
 562              		.cfi_def_cfa_offset 4
 563              		.cfi_offset 7, -4
 564 0002 00AF     		add	r7, sp, #0
 565              		.cfi_def_cfa_register 7
 713:Generated_Source\PSoC5/PWM2.c ****         return (CY_GET_REG8(PWM2_STATUS_PTR));
 566              		.loc 1 713 0
 567 0004 034B     		ldr	r3, .L38
 568 0006 1B78     		ldrb	r3, [r3]
 569 0008 DBB2     		uxtb	r3, r3
 714:Generated_Source\PSoC5/PWM2.c ****     }
 570              		.loc 1 714 0
 571 000a 1846     		mov	r0, r3
 572 000c BD46     		mov	sp, r7
 573              		.cfi_def_cfa_register 13
 574              		@ sp needed
 575 000e 80BC     		pop	{r7}
 576              		.cfi_restore 7
 577              		.cfi_def_cfa_offset 0
 578 0010 7047     		bx	lr
 579              	.L39:
 580 0012 00BF     		.align	2
 581              	.L38:
 582 0014 63640040 		.word	1073767523
 583              		.cfi_endproc
 584              	.LFE11:
 585              		.size	PWM2_ReadStatusRegister, .-PWM2_ReadStatusRegister
 586              		.section	.text.PWM2_ReadControlRegister,"ax",%progbits
 587              		.align	2
 588              		.global	PWM2_ReadControlRegister
 589              		.thumb
 590              		.thumb_func
 591              		.type	PWM2_ReadControlRegister, %function
 592              	PWM2_ReadControlRegister:
 593              	.LFB12:
 715:Generated_Source\PSoC5/PWM2.c **** 
 716:Generated_Source\PSoC5/PWM2.c **** #endif /* (PWM2_UseStatus || PWM2_UsingFixedFunction) */
 717:Generated_Source\PSoC5/PWM2.c **** 
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 24


 718:Generated_Source\PSoC5/PWM2.c **** 
 719:Generated_Source\PSoC5/PWM2.c **** #if (PWM2_UseControl)
 720:Generated_Source\PSoC5/PWM2.c **** 
 721:Generated_Source\PSoC5/PWM2.c **** 
 722:Generated_Source\PSoC5/PWM2.c ****     /*******************************************************************************
 723:Generated_Source\PSoC5/PWM2.c ****     * Function Name: PWM2_ReadControlRegister
 724:Generated_Source\PSoC5/PWM2.c ****     ********************************************************************************
 725:Generated_Source\PSoC5/PWM2.c ****     *
 726:Generated_Source\PSoC5/PWM2.c ****     * Summary:
 727:Generated_Source\PSoC5/PWM2.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC5/PWM2.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC5/PWM2.c ****     *
 730:Generated_Source\PSoC5/PWM2.c ****     * Parameters:
 731:Generated_Source\PSoC5/PWM2.c ****     *  None
 732:Generated_Source\PSoC5/PWM2.c ****     *
 733:Generated_Source\PSoC5/PWM2.c ****     * Return:
 734:Generated_Source\PSoC5/PWM2.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC5/PWM2.c ****     *
 736:Generated_Source\PSoC5/PWM2.c ****     *******************************************************************************/
 737:Generated_Source\PSoC5/PWM2.c ****     uint8 PWM2_ReadControlRegister(void) 
 738:Generated_Source\PSoC5/PWM2.c ****     {
 594              		.loc 1 738 0
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 8
 597              		@ frame_needed = 1, uses_anonymous_args = 0
 598              		@ link register save eliminated.
 599 0000 80B4     		push	{r7}
 600              		.cfi_def_cfa_offset 4
 601              		.cfi_offset 7, -4
 602 0002 83B0     		sub	sp, sp, #12
 603              		.cfi_def_cfa_offset 16
 604 0004 00AF     		add	r7, sp, #0
 605              		.cfi_def_cfa_register 7
 739:Generated_Source\PSoC5/PWM2.c ****         uint8 result;
 740:Generated_Source\PSoC5/PWM2.c **** 
 741:Generated_Source\PSoC5/PWM2.c ****         result = CY_GET_REG8(PWM2_CONTROL_PTR);
 606              		.loc 1 741 0
 607 0006 044B     		ldr	r3, .L42
 608 0008 1B78     		ldrb	r3, [r3]
 609 000a FB71     		strb	r3, [r7, #7]
 742:Generated_Source\PSoC5/PWM2.c ****         return (result);
 610              		.loc 1 742 0
 611 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 743:Generated_Source\PSoC5/PWM2.c ****     }
 612              		.loc 1 743 0
 613 000e 1846     		mov	r0, r3
 614 0010 0C37     		adds	r7, r7, #12
 615              		.cfi_def_cfa_offset 4
 616 0012 BD46     		mov	sp, r7
 617              		.cfi_def_cfa_register 13
 618              		@ sp needed
 619 0014 80BC     		pop	{r7}
 620              		.cfi_restore 7
 621              		.cfi_def_cfa_offset 0
 622 0016 7047     		bx	lr
 623              	.L43:
 624              		.align	2
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 25


 625              	.L42:
 626 0018 73640040 		.word	1073767539
 627              		.cfi_endproc
 628              	.LFE12:
 629              		.size	PWM2_ReadControlRegister, .-PWM2_ReadControlRegister
 630              		.section	.text.PWM2_WriteControlRegister,"ax",%progbits
 631              		.align	2
 632              		.global	PWM2_WriteControlRegister
 633              		.thumb
 634              		.thumb_func
 635              		.type	PWM2_WriteControlRegister, %function
 636              	PWM2_WriteControlRegister:
 637              	.LFB13:
 744:Generated_Source\PSoC5/PWM2.c **** 
 745:Generated_Source\PSoC5/PWM2.c **** 
 746:Generated_Source\PSoC5/PWM2.c ****     /*******************************************************************************
 747:Generated_Source\PSoC5/PWM2.c ****     * Function Name: PWM2_WriteControlRegister
 748:Generated_Source\PSoC5/PWM2.c ****     ********************************************************************************
 749:Generated_Source\PSoC5/PWM2.c ****     *
 750:Generated_Source\PSoC5/PWM2.c ****     * Summary:
 751:Generated_Source\PSoC5/PWM2.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC5/PWM2.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC5/PWM2.c ****     *
 754:Generated_Source\PSoC5/PWM2.c ****     * Parameters:
 755:Generated_Source\PSoC5/PWM2.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC5/PWM2.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC5/PWM2.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC5/PWM2.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC5/PWM2.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC5/PWM2.c ****     *
 761:Generated_Source\PSoC5/PWM2.c ****     * Return:
 762:Generated_Source\PSoC5/PWM2.c ****     *  None
 763:Generated_Source\PSoC5/PWM2.c ****     *
 764:Generated_Source\PSoC5/PWM2.c ****     *******************************************************************************/
 765:Generated_Source\PSoC5/PWM2.c ****     void PWM2_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC5/PWM2.c ****     {
 638              		.loc 1 766 0
 639              		.cfi_startproc
 640              		@ args = 0, pretend = 0, frame = 8
 641              		@ frame_needed = 1, uses_anonymous_args = 0
 642              		@ link register save eliminated.
 643 0000 80B4     		push	{r7}
 644              		.cfi_def_cfa_offset 4
 645              		.cfi_offset 7, -4
 646 0002 83B0     		sub	sp, sp, #12
 647              		.cfi_def_cfa_offset 16
 648 0004 00AF     		add	r7, sp, #0
 649              		.cfi_def_cfa_register 7
 650 0006 0346     		mov	r3, r0
 651 0008 FB71     		strb	r3, [r7, #7]
 767:Generated_Source\PSoC5/PWM2.c ****         CY_SET_REG8(PWM2_CONTROL_PTR, control);
 652              		.loc 1 767 0
 653 000a 044A     		ldr	r2, .L45
 654 000c FB79     		ldrb	r3, [r7, #7]
 655 000e 1370     		strb	r3, [r2]
 768:Generated_Source\PSoC5/PWM2.c ****     }
 656              		.loc 1 768 0
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 26


 657 0010 00BF     		nop
 658 0012 0C37     		adds	r7, r7, #12
 659              		.cfi_def_cfa_offset 4
 660 0014 BD46     		mov	sp, r7
 661              		.cfi_def_cfa_register 13
 662              		@ sp needed
 663 0016 80BC     		pop	{r7}
 664              		.cfi_restore 7
 665              		.cfi_def_cfa_offset 0
 666 0018 7047     		bx	lr
 667              	.L46:
 668 001a 00BF     		.align	2
 669              	.L45:
 670 001c 73640040 		.word	1073767539
 671              		.cfi_endproc
 672              	.LFE13:
 673              		.size	PWM2_WriteControlRegister, .-PWM2_WriteControlRegister
 674              		.section	.text.PWM2_ReadCapture,"ax",%progbits
 675              		.align	2
 676              		.global	PWM2_ReadCapture
 677              		.thumb
 678              		.thumb_func
 679              		.type	PWM2_ReadCapture, %function
 680              	PWM2_ReadCapture:
 681              	.LFB14:
 769:Generated_Source\PSoC5/PWM2.c **** 
 770:Generated_Source\PSoC5/PWM2.c **** #endif /* (PWM2_UseControl) */
 771:Generated_Source\PSoC5/PWM2.c **** 
 772:Generated_Source\PSoC5/PWM2.c **** 
 773:Generated_Source\PSoC5/PWM2.c **** #if (!PWM2_UsingFixedFunction)
 774:Generated_Source\PSoC5/PWM2.c **** 
 775:Generated_Source\PSoC5/PWM2.c **** 
 776:Generated_Source\PSoC5/PWM2.c ****     /*******************************************************************************
 777:Generated_Source\PSoC5/PWM2.c ****     * Function Name: PWM2_ReadCapture
 778:Generated_Source\PSoC5/PWM2.c ****     ********************************************************************************
 779:Generated_Source\PSoC5/PWM2.c ****     *
 780:Generated_Source\PSoC5/PWM2.c ****     * Summary:
 781:Generated_Source\PSoC5/PWM2.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC5/PWM2.c ****     *
 783:Generated_Source\PSoC5/PWM2.c ****     * Parameters:
 784:Generated_Source\PSoC5/PWM2.c ****     *  None
 785:Generated_Source\PSoC5/PWM2.c ****     *
 786:Generated_Source\PSoC5/PWM2.c ****     * Return:
 787:Generated_Source\PSoC5/PWM2.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC5/PWM2.c ****     *
 789:Generated_Source\PSoC5/PWM2.c ****     *******************************************************************************/
 790:Generated_Source\PSoC5/PWM2.c ****     uint16 PWM2_ReadCapture(void) 
 791:Generated_Source\PSoC5/PWM2.c ****     {
 682              		.loc 1 791 0
 683              		.cfi_startproc
 684              		@ args = 0, pretend = 0, frame = 0
 685              		@ frame_needed = 1, uses_anonymous_args = 0
 686              		@ link register save eliminated.
 687 0000 80B4     		push	{r7}
 688              		.cfi_def_cfa_offset 4
 689              		.cfi_offset 7, -4
 690 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 27


 691              		.cfi_def_cfa_register 7
 792:Generated_Source\PSoC5/PWM2.c ****         return (CY_GET_REG16(PWM2_CAPTURE_LSB_PTR));
 692              		.loc 1 792 0
 693 0004 034B     		ldr	r3, .L49
 694 0006 1B88     		ldrh	r3, [r3]	@ movhi
 695 0008 9BB2     		uxth	r3, r3
 793:Generated_Source\PSoC5/PWM2.c ****     }
 696              		.loc 1 793 0
 697 000a 1846     		mov	r0, r3
 698 000c BD46     		mov	sp, r7
 699              		.cfi_def_cfa_register 13
 700              		@ sp needed
 701 000e 80BC     		pop	{r7}
 702              		.cfi_restore 7
 703              		.cfi_def_cfa_offset 0
 704 0010 7047     		bx	lr
 705              	.L50:
 706 0012 00BF     		.align	2
 707              	.L49:
 708 0014 A4680040 		.word	1073768612
 709              		.cfi_endproc
 710              	.LFE14:
 711              		.size	PWM2_ReadCapture, .-PWM2_ReadCapture
 712              		.section	.text.PWM2_ReadCompare1,"ax",%progbits
 713              		.align	2
 714              		.global	PWM2_ReadCompare1
 715              		.thumb
 716              		.thumb_func
 717              		.type	PWM2_ReadCompare1, %function
 718              	PWM2_ReadCompare1:
 719              	.LFB15:
 794:Generated_Source\PSoC5/PWM2.c **** 
 795:Generated_Source\PSoC5/PWM2.c **** #endif /* (!PWM2_UsingFixedFunction) */
 796:Generated_Source\PSoC5/PWM2.c **** 
 797:Generated_Source\PSoC5/PWM2.c **** 
 798:Generated_Source\PSoC5/PWM2.c **** #if (PWM2_UseOneCompareMode)
 799:Generated_Source\PSoC5/PWM2.c **** 
 800:Generated_Source\PSoC5/PWM2.c **** 
 801:Generated_Source\PSoC5/PWM2.c ****     /*******************************************************************************
 802:Generated_Source\PSoC5/PWM2.c ****     * Function Name: PWM2_ReadCompare
 803:Generated_Source\PSoC5/PWM2.c ****     ********************************************************************************
 804:Generated_Source\PSoC5/PWM2.c ****     *
 805:Generated_Source\PSoC5/PWM2.c ****     * Summary:
 806:Generated_Source\PSoC5/PWM2.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC5/PWM2.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC5/PWM2.c ****     *
 809:Generated_Source\PSoC5/PWM2.c ****     * Parameters:
 810:Generated_Source\PSoC5/PWM2.c ****     *  None
 811:Generated_Source\PSoC5/PWM2.c ****     *
 812:Generated_Source\PSoC5/PWM2.c ****     * Return:
 813:Generated_Source\PSoC5/PWM2.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC5/PWM2.c ****     *
 815:Generated_Source\PSoC5/PWM2.c ****     *******************************************************************************/
 816:Generated_Source\PSoC5/PWM2.c ****     uint16 PWM2_ReadCompare(void) 
 817:Generated_Source\PSoC5/PWM2.c ****     {
 818:Generated_Source\PSoC5/PWM2.c ****         #if(PWM2_UsingFixedFunction)
 819:Generated_Source\PSoC5/PWM2.c ****             return ((uint16)CY_GET_REG16(PWM2_COMPARE1_LSB_PTR));
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 28


 820:Generated_Source\PSoC5/PWM2.c ****         #else
 821:Generated_Source\PSoC5/PWM2.c ****             return (CY_GET_REG16(PWM2_COMPARE1_LSB_PTR));
 822:Generated_Source\PSoC5/PWM2.c ****         #endif /* (PWM2_UsingFixedFunction) */
 823:Generated_Source\PSoC5/PWM2.c ****     }
 824:Generated_Source\PSoC5/PWM2.c **** 
 825:Generated_Source\PSoC5/PWM2.c **** #else
 826:Generated_Source\PSoC5/PWM2.c **** 
 827:Generated_Source\PSoC5/PWM2.c **** 
 828:Generated_Source\PSoC5/PWM2.c ****     /*******************************************************************************
 829:Generated_Source\PSoC5/PWM2.c ****     * Function Name: PWM2_ReadCompare1
 830:Generated_Source\PSoC5/PWM2.c ****     ********************************************************************************
 831:Generated_Source\PSoC5/PWM2.c ****     *
 832:Generated_Source\PSoC5/PWM2.c ****     * Summary:
 833:Generated_Source\PSoC5/PWM2.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC5/PWM2.c ****     *
 835:Generated_Source\PSoC5/PWM2.c ****     * Parameters:
 836:Generated_Source\PSoC5/PWM2.c ****     *  None
 837:Generated_Source\PSoC5/PWM2.c ****     *
 838:Generated_Source\PSoC5/PWM2.c ****     * Return:
 839:Generated_Source\PSoC5/PWM2.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC5/PWM2.c ****     *
 841:Generated_Source\PSoC5/PWM2.c ****     *******************************************************************************/
 842:Generated_Source\PSoC5/PWM2.c ****     uint16 PWM2_ReadCompare1(void) 
 843:Generated_Source\PSoC5/PWM2.c ****     {
 720              		.loc 1 843 0
 721              		.cfi_startproc
 722              		@ args = 0, pretend = 0, frame = 0
 723              		@ frame_needed = 1, uses_anonymous_args = 0
 724              		@ link register save eliminated.
 725 0000 80B4     		push	{r7}
 726              		.cfi_def_cfa_offset 4
 727              		.cfi_offset 7, -4
 728 0002 00AF     		add	r7, sp, #0
 729              		.cfi_def_cfa_register 7
 844:Generated_Source\PSoC5/PWM2.c ****         return (CY_GET_REG16(PWM2_COMPARE1_LSB_PTR));
 730              		.loc 1 844 0
 731 0004 034B     		ldr	r3, .L53
 732 0006 1B88     		ldrh	r3, [r3]	@ movhi
 733 0008 9BB2     		uxth	r3, r3
 845:Generated_Source\PSoC5/PWM2.c ****     }
 734              		.loc 1 845 0
 735 000a 1846     		mov	r0, r3
 736 000c BD46     		mov	sp, r7
 737              		.cfi_def_cfa_register 13
 738              		@ sp needed
 739 000e 80BC     		pop	{r7}
 740              		.cfi_restore 7
 741              		.cfi_def_cfa_offset 0
 742 0010 7047     		bx	lr
 743              	.L54:
 744 0012 00BF     		.align	2
 745              	.L53:
 746 0014 44680040 		.word	1073768516
 747              		.cfi_endproc
 748              	.LFE15:
 749              		.size	PWM2_ReadCompare1, .-PWM2_ReadCompare1
 750              		.section	.text.PWM2_ReadCompare2,"ax",%progbits
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 29


 751              		.align	2
 752              		.global	PWM2_ReadCompare2
 753              		.thumb
 754              		.thumb_func
 755              		.type	PWM2_ReadCompare2, %function
 756              	PWM2_ReadCompare2:
 757              	.LFB16:
 846:Generated_Source\PSoC5/PWM2.c **** 
 847:Generated_Source\PSoC5/PWM2.c **** 
 848:Generated_Source\PSoC5/PWM2.c ****     /*******************************************************************************
 849:Generated_Source\PSoC5/PWM2.c ****     * Function Name: PWM2_ReadCompare2
 850:Generated_Source\PSoC5/PWM2.c ****     ********************************************************************************
 851:Generated_Source\PSoC5/PWM2.c ****     *
 852:Generated_Source\PSoC5/PWM2.c ****     * Summary:
 853:Generated_Source\PSoC5/PWM2.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC5/PWM2.c ****     *
 855:Generated_Source\PSoC5/PWM2.c ****     * Parameters:
 856:Generated_Source\PSoC5/PWM2.c ****     *  None
 857:Generated_Source\PSoC5/PWM2.c ****     *
 858:Generated_Source\PSoC5/PWM2.c ****     * Return:
 859:Generated_Source\PSoC5/PWM2.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC5/PWM2.c ****     *
 861:Generated_Source\PSoC5/PWM2.c ****     *******************************************************************************/
 862:Generated_Source\PSoC5/PWM2.c ****     uint16 PWM2_ReadCompare2(void) 
 863:Generated_Source\PSoC5/PWM2.c ****     {
 758              		.loc 1 863 0
 759              		.cfi_startproc
 760              		@ args = 0, pretend = 0, frame = 0
 761              		@ frame_needed = 1, uses_anonymous_args = 0
 762              		@ link register save eliminated.
 763 0000 80B4     		push	{r7}
 764              		.cfi_def_cfa_offset 4
 765              		.cfi_offset 7, -4
 766 0002 00AF     		add	r7, sp, #0
 767              		.cfi_def_cfa_register 7
 864:Generated_Source\PSoC5/PWM2.c ****         return (CY_GET_REG16(PWM2_COMPARE2_LSB_PTR));
 768              		.loc 1 864 0
 769 0004 034B     		ldr	r3, .L57
 770 0006 1B88     		ldrh	r3, [r3]	@ movhi
 771 0008 9BB2     		uxth	r3, r3
 865:Generated_Source\PSoC5/PWM2.c ****     }
 772              		.loc 1 865 0
 773 000a 1846     		mov	r0, r3
 774 000c BD46     		mov	sp, r7
 775              		.cfi_def_cfa_register 13
 776              		@ sp needed
 777 000e 80BC     		pop	{r7}
 778              		.cfi_restore 7
 779              		.cfi_def_cfa_offset 0
 780 0010 7047     		bx	lr
 781              	.L58:
 782 0012 00BF     		.align	2
 783              	.L57:
 784 0014 64680040 		.word	1073768548
 785              		.cfi_endproc
 786              	.LFE16:
 787              		.size	PWM2_ReadCompare2, .-PWM2_ReadCompare2
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 30


 788              		.section	.text.PWM2_ReadPeriod,"ax",%progbits
 789              		.align	2
 790              		.global	PWM2_ReadPeriod
 791              		.thumb
 792              		.thumb_func
 793              		.type	PWM2_ReadPeriod, %function
 794              	PWM2_ReadPeriod:
 795              	.LFB17:
 866:Generated_Source\PSoC5/PWM2.c **** 
 867:Generated_Source\PSoC5/PWM2.c **** #endif /* (PWM2_UseOneCompareMode) */
 868:Generated_Source\PSoC5/PWM2.c **** 
 869:Generated_Source\PSoC5/PWM2.c **** 
 870:Generated_Source\PSoC5/PWM2.c **** /*******************************************************************************
 871:Generated_Source\PSoC5/PWM2.c **** * Function Name: PWM2_ReadPeriod
 872:Generated_Source\PSoC5/PWM2.c **** ********************************************************************************
 873:Generated_Source\PSoC5/PWM2.c **** *
 874:Generated_Source\PSoC5/PWM2.c **** * Summary:
 875:Generated_Source\PSoC5/PWM2.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC5/PWM2.c **** *
 877:Generated_Source\PSoC5/PWM2.c **** * Parameters:
 878:Generated_Source\PSoC5/PWM2.c **** *  None
 879:Generated_Source\PSoC5/PWM2.c **** *
 880:Generated_Source\PSoC5/PWM2.c **** * Return:
 881:Generated_Source\PSoC5/PWM2.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC5/PWM2.c **** *
 883:Generated_Source\PSoC5/PWM2.c **** *******************************************************************************/
 884:Generated_Source\PSoC5/PWM2.c **** uint16 PWM2_ReadPeriod(void) 
 885:Generated_Source\PSoC5/PWM2.c **** {
 796              		.loc 1 885 0
 797              		.cfi_startproc
 798              		@ args = 0, pretend = 0, frame = 0
 799              		@ frame_needed = 1, uses_anonymous_args = 0
 800              		@ link register save eliminated.
 801 0000 80B4     		push	{r7}
 802              		.cfi_def_cfa_offset 4
 803              		.cfi_offset 7, -4
 804 0002 00AF     		add	r7, sp, #0
 805              		.cfi_def_cfa_register 7
 886:Generated_Source\PSoC5/PWM2.c ****     #if(PWM2_UsingFixedFunction)
 887:Generated_Source\PSoC5/PWM2.c ****         return ((uint16)CY_GET_REG16(PWM2_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC5/PWM2.c ****     #else
 889:Generated_Source\PSoC5/PWM2.c ****         return (CY_GET_REG16(PWM2_PERIOD_LSB_PTR));
 806              		.loc 1 889 0
 807 0004 034B     		ldr	r3, .L61
 808 0006 1B88     		ldrh	r3, [r3]	@ movhi
 809 0008 9BB2     		uxth	r3, r3
 890:Generated_Source\PSoC5/PWM2.c ****     #endif /* (PWM2_UsingFixedFunction) */
 891:Generated_Source\PSoC5/PWM2.c **** }
 810              		.loc 1 891 0
 811 000a 1846     		mov	r0, r3
 812 000c BD46     		mov	sp, r7
 813              		.cfi_def_cfa_register 13
 814              		@ sp needed
 815 000e 80BC     		pop	{r7}
 816              		.cfi_restore 7
 817              		.cfi_def_cfa_offset 0
 818 0010 7047     		bx	lr
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 31


 819              	.L62:
 820 0012 00BF     		.align	2
 821              	.L61:
 822 0014 84680040 		.word	1073768580
 823              		.cfi_endproc
 824              	.LFE17:
 825              		.size	PWM2_ReadPeriod, .-PWM2_ReadPeriod
 826              		.text
 827              	.Letext0:
 828              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 829              		.section	.debug_info,"",%progbits
 830              	.Ldebug_info0:
 831 0000 DF020000 		.4byte	0x2df
 832 0004 0400     		.2byte	0x4
 833 0006 00000000 		.4byte	.Ldebug_abbrev0
 834 000a 04       		.byte	0x4
 835 000b 01       		.uleb128 0x1
 836 000c 06000000 		.4byte	.LASF43
 837 0010 0C       		.byte	0xc
 838 0011 28020000 		.4byte	.LASF44
 839 0015 C6010000 		.4byte	.LASF45
 840 0019 00000000 		.4byte	.Ldebug_ranges0+0
 841 001d 00000000 		.4byte	0
 842 0021 00000000 		.4byte	.Ldebug_line0
 843 0025 02       		.uleb128 0x2
 844 0026 01       		.byte	0x1
 845 0027 06       		.byte	0x6
 846 0028 F5020000 		.4byte	.LASF0
 847 002c 02       		.uleb128 0x2
 848 002d 01       		.byte	0x1
 849 002e 08       		.byte	0x8
 850 002f 36010000 		.4byte	.LASF1
 851 0033 02       		.uleb128 0x2
 852 0034 02       		.byte	0x2
 853 0035 05       		.byte	0x5
 854 0036 70010000 		.4byte	.LASF2
 855 003a 02       		.uleb128 0x2
 856 003b 02       		.byte	0x2
 857 003c 07       		.byte	0x7
 858 003d AD000000 		.4byte	.LASF3
 859 0041 02       		.uleb128 0x2
 860 0042 04       		.byte	0x4
 861 0043 05       		.byte	0x5
 862 0044 C8020000 		.4byte	.LASF4
 863 0048 02       		.uleb128 0x2
 864 0049 04       		.byte	0x4
 865 004a 07       		.byte	0x7
 866 004b 49010000 		.4byte	.LASF5
 867 004f 02       		.uleb128 0x2
 868 0050 08       		.byte	0x8
 869 0051 05       		.byte	0x5
 870 0052 88020000 		.4byte	.LASF6
 871 0056 02       		.uleb128 0x2
 872 0057 08       		.byte	0x8
 873 0058 07       		.byte	0x7
 874 0059 11020000 		.4byte	.LASF7
 875 005d 03       		.uleb128 0x3
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 32


 876 005e 04       		.byte	0x4
 877 005f 05       		.byte	0x5
 878 0060 696E7400 		.ascii	"int\000"
 879 0064 02       		.uleb128 0x2
 880 0065 04       		.byte	0x4
 881 0066 07       		.byte	0x7
 882 0067 B9010000 		.4byte	.LASF8
 883 006b 04       		.uleb128 0x4
 884 006c 5B010000 		.4byte	.LASF9
 885 0070 02       		.byte	0x2
 886 0071 E801     		.2byte	0x1e8
 887 0073 2C000000 		.4byte	0x2c
 888 0077 04       		.uleb128 0x4
 889 0078 7A010000 		.4byte	.LASF10
 890 007c 02       		.byte	0x2
 891 007d E901     		.2byte	0x1e9
 892 007f 3A000000 		.4byte	0x3a
 893 0083 02       		.uleb128 0x2
 894 0084 04       		.byte	0x4
 895 0085 04       		.byte	0x4
 896 0086 F2000000 		.4byte	.LASF11
 897 008a 02       		.uleb128 0x2
 898 008b 08       		.byte	0x8
 899 008c 04       		.byte	0x4
 900 008d 69010000 		.4byte	.LASF12
 901 0091 02       		.uleb128 0x2
 902 0092 01       		.byte	0x1
 903 0093 08       		.byte	0x8
 904 0094 D1020000 		.4byte	.LASF13
 905 0098 04       		.uleb128 0x4
 906 0099 44010000 		.4byte	.LASF14
 907 009d 02       		.byte	0x2
 908 009e 9202     		.2byte	0x292
 909 00a0 A4000000 		.4byte	0xa4
 910 00a4 05       		.uleb128 0x5
 911 00a5 6B000000 		.4byte	0x6b
 912 00a9 04       		.uleb128 0x4
 913 00aa 00000000 		.4byte	.LASF15
 914 00ae 02       		.byte	0x2
 915 00af 9302     		.2byte	0x293
 916 00b1 B5000000 		.4byte	0xb5
 917 00b5 05       		.uleb128 0x5
 918 00b6 77000000 		.4byte	0x77
 919 00ba 02       		.uleb128 0x2
 920 00bb 08       		.byte	0x8
 921 00bc 04       		.byte	0x4
 922 00bd E9020000 		.4byte	.LASF16
 923 00c1 02       		.uleb128 0x2
 924 00c2 04       		.byte	0x4
 925 00c3 07       		.byte	0x7
 926 00c4 7F020000 		.4byte	.LASF17
 927 00c8 06       		.uleb128 0x6
 928 00c9 4D020000 		.4byte	.LASF20
 929 00cd 01       		.byte	0x1
 930 00ce 37       		.byte	0x37
 931 00cf 00000000 		.4byte	.LFB0
 932 00d3 24000000 		.4byte	.LFE0-.LFB0
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 33


 933 00d7 01       		.uleb128 0x1
 934 00d8 9C       		.byte	0x9c
 935 00d9 07       		.uleb128 0x7
 936 00da E8000000 		.4byte	.LASF23
 937 00de 01       		.byte	0x1
 938 00df 54       		.byte	0x54
 939 00e0 00000000 		.4byte	.LFB1
 940 00e4 98000000 		.4byte	.LFE1-.LFB1
 941 00e8 01       		.uleb128 0x1
 942 00e9 9C       		.byte	0x9c
 943 00ea 0B010000 		.4byte	0x10b
 944 00ee 08       		.uleb128 0x8
 945 00ef 6A020000 		.4byte	.LASF18
 946 00f3 01       		.byte	0x1
 947 00f4 57       		.byte	0x57
 948 00f5 6B000000 		.4byte	0x6b
 949 00f9 02       		.uleb128 0x2
 950 00fa 91       		.byte	0x91
 951 00fb 77       		.sleb128 -9
 952 00fc 08       		.uleb128 0x8
 953 00fd 81010000 		.4byte	.LASF19
 954 0101 01       		.byte	0x1
 955 0102 5D       		.byte	0x5d
 956 0103 6B000000 		.4byte	0x6b
 957 0107 02       		.uleb128 0x2
 958 0108 91       		.byte	0x91
 959 0109 76       		.sleb128 -10
 960 010a 00       		.byte	0
 961 010b 09       		.uleb128 0x9
 962 010c 2A010000 		.4byte	.LASF21
 963 0110 01       		.byte	0x1
 964 0111 C7       		.byte	0xc7
 965 0112 00000000 		.4byte	.LFB2
 966 0116 20000000 		.4byte	.LFE2-.LFB2
 967 011a 01       		.uleb128 0x1
 968 011b 9C       		.byte	0x9c
 969 011c 09       		.uleb128 0x9
 970 011d 95010000 		.4byte	.LASF22
 971 0121 01       		.byte	0x1
 972 0122 E9       		.byte	0xe9
 973 0123 00000000 		.4byte	.LFB3
 974 0127 20000000 		.4byte	.LFE3-.LFB3
 975 012b 01       		.uleb128 0x1
 976 012c 9C       		.byte	0x9c
 977 012d 0A       		.uleb128 0xa
 978 012e 94000000 		.4byte	.LASF24
 979 0132 01       		.byte	0x1
 980 0133 9301     		.2byte	0x193
 981 0135 00000000 		.4byte	.LFB4
 982 0139 20000000 		.4byte	.LFE4-.LFB4
 983 013d 01       		.uleb128 0x1
 984 013e 9C       		.byte	0x9c
 985 013f 53010000 		.4byte	0x153
 986 0143 0B       		.uleb128 0xb
 987 0144 F8000000 		.4byte	.LASF27
 988 0148 01       		.byte	0x1
 989 0149 9301     		.2byte	0x193
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 34


 990 014b 77000000 		.4byte	0x77
 991 014f 02       		.uleb128 0x2
 992 0150 91       		.byte	0x91
 993 0151 76       		.sleb128 -10
 994 0152 00       		.byte	0
 995 0153 0C       		.uleb128 0xc
 996 0154 25030000 		.4byte	.LASF34
 997 0158 01       		.byte	0x1
 998 0159 A901     		.2byte	0x1a9
 999 015b 77000000 		.4byte	0x77
 1000 015f 00000000 		.4byte	.LFB5
 1001 0163 20000000 		.4byte	.LFE5-.LFB5
 1002 0167 01       		.uleb128 0x1
 1003 0168 9C       		.byte	0x9c
 1004 0169 0D       		.uleb128 0xd
 1005 016a 16030000 		.4byte	.LASF25
 1006 016e 01       		.byte	0x1
 1007 016f C501     		.2byte	0x1c5
 1008 0171 00000000 		.4byte	.LFB6
 1009 0175 1C000000 		.4byte	.LFE6-.LFB6
 1010 0179 01       		.uleb128 0x1
 1011 017a 9C       		.byte	0x9c
 1012 017b 0A       		.uleb128 0xa
 1013 017c 19010000 		.4byte	.LASF26
 1014 0180 01       		.byte	0x1
 1015 0181 E201     		.2byte	0x1e2
 1016 0183 00000000 		.4byte	.LFB7
 1017 0187 20000000 		.4byte	.LFE7-.LFB7
 1018 018b 01       		.uleb128 0x1
 1019 018c 9C       		.byte	0x9c
 1020 018d A1010000 		.4byte	0x1a1
 1021 0191 0B       		.uleb128 0xb
 1022 0192 A6000000 		.4byte	.LASF28
 1023 0196 01       		.byte	0x1
 1024 0197 E201     		.2byte	0x1e2
 1025 0199 77000000 		.4byte	0x77
 1026 019d 02       		.uleb128 0x2
 1027 019e 91       		.byte	0x91
 1028 019f 76       		.sleb128 -10
 1029 01a0 00       		.byte	0
 1030 01a1 0A       		.uleb128 0xa
 1031 01a2 D6020000 		.4byte	.LASF29
 1032 01a6 01       		.byte	0x1
 1033 01a7 2B02     		.2byte	0x22b
 1034 01a9 00000000 		.4byte	.LFB8
 1035 01ad 20000000 		.4byte	.LFE8-.LFB8
 1036 01b1 01       		.uleb128 0x1
 1037 01b2 9C       		.byte	0x9c
 1038 01b3 C7010000 		.4byte	0x1c7
 1039 01b7 0B       		.uleb128 0xb
 1040 01b8 01030000 		.4byte	.LASF30
 1041 01bc 01       		.byte	0x1
 1042 01bd 2B02     		.2byte	0x22b
 1043 01bf 77000000 		.4byte	0x77
 1044 01c3 02       		.uleb128 0x2
 1045 01c4 91       		.byte	0x91
 1046 01c5 76       		.sleb128 -10
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 35


 1047 01c6 00       		.byte	0
 1048 01c7 0A       		.uleb128 0xa
 1049 01c8 B5020000 		.4byte	.LASF31
 1050 01cc 01       		.byte	0x1
 1051 01cd 4802     		.2byte	0x248
 1052 01cf 00000000 		.4byte	.LFB9
 1053 01d3 20000000 		.4byte	.LFE9-.LFB9
 1054 01d7 01       		.uleb128 0x1
 1055 01d8 9C       		.byte	0x9c
 1056 01d9 ED010000 		.4byte	0x1ed
 1057 01dd 0B       		.uleb128 0xb
 1058 01de 01030000 		.4byte	.LASF30
 1059 01e2 01       		.byte	0x1
 1060 01e3 4802     		.2byte	0x248
 1061 01e5 77000000 		.4byte	0x77
 1062 01e9 02       		.uleb128 0x2
 1063 01ea 91       		.byte	0x91
 1064 01eb 76       		.sleb128 -10
 1065 01ec 00       		.byte	0
 1066 01ed 0A       		.uleb128 0xa
 1067 01ee C0000000 		.4byte	.LASF32
 1068 01f2 01       		.byte	0x1
 1069 01f3 AC02     		.2byte	0x2ac
 1070 01f5 00000000 		.4byte	.LFB10
 1071 01f9 20000000 		.4byte	.LFE10-.LFB10
 1072 01fd 01       		.uleb128 0x1
 1073 01fe 9C       		.byte	0x9c
 1074 01ff 13020000 		.4byte	0x213
 1075 0203 0B       		.uleb128 0xb
 1076 0204 96020000 		.4byte	.LASF33
 1077 0208 01       		.byte	0x1
 1078 0209 AC02     		.2byte	0x2ac
 1079 020b 6B000000 		.4byte	0x6b
 1080 020f 02       		.uleb128 0x2
 1081 0210 91       		.byte	0x91
 1082 0211 77       		.sleb128 -9
 1083 0212 00       		.byte	0
 1084 0213 0C       		.uleb128 0xc
 1085 0214 36030000 		.4byte	.LASF35
 1086 0218 01       		.byte	0x1
 1087 0219 C702     		.2byte	0x2c7
 1088 021b 6B000000 		.4byte	0x6b
 1089 021f 00000000 		.4byte	.LFB11
 1090 0223 18000000 		.4byte	.LFE11-.LFB11
 1091 0227 01       		.uleb128 0x1
 1092 0228 9C       		.byte	0x9c
 1093 0229 0E       		.uleb128 0xe
 1094 022a 00010000 		.4byte	.LASF46
 1095 022e 01       		.byte	0x1
 1096 022f E102     		.2byte	0x2e1
 1097 0231 6B000000 		.4byte	0x6b
 1098 0235 00000000 		.4byte	.LFB12
 1099 0239 1C000000 		.4byte	.LFE12-.LFB12
 1100 023d 01       		.uleb128 0x1
 1101 023e 9C       		.byte	0x9c
 1102 023f 53020000 		.4byte	0x253
 1103 0243 0F       		.uleb128 0xf
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 36


 1104 0244 46020000 		.4byte	.LASF36
 1105 0248 01       		.byte	0x1
 1106 0249 E302     		.2byte	0x2e3
 1107 024b 6B000000 		.4byte	0x6b
 1108 024f 02       		.uleb128 0x2
 1109 0250 91       		.byte	0x91
 1110 0251 77       		.sleb128 -9
 1111 0252 00       		.byte	0
 1112 0253 0A       		.uleb128 0xa
 1113 0254 9F010000 		.4byte	.LASF37
 1114 0258 01       		.byte	0x1
 1115 0259 FD02     		.2byte	0x2fd
 1116 025b 00000000 		.4byte	.LFB13
 1117 025f 20000000 		.4byte	.LFE13-.LFB13
 1118 0263 01       		.uleb128 0x1
 1119 0264 9C       		.byte	0x9c
 1120 0265 79020000 		.4byte	0x279
 1121 0269 0B       		.uleb128 0xb
 1122 026a 61010000 		.4byte	.LASF38
 1123 026e 01       		.byte	0x1
 1124 026f FD02     		.2byte	0x2fd
 1125 0271 6B000000 		.4byte	0x6b
 1126 0275 02       		.uleb128 0x2
 1127 0276 91       		.byte	0x91
 1128 0277 77       		.sleb128 -9
 1129 0278 00       		.byte	0
 1130 0279 0C       		.uleb128 0xc
 1131 027a A4020000 		.4byte	.LASF39
 1132 027e 01       		.byte	0x1
 1133 027f 1603     		.2byte	0x316
 1134 0281 77000000 		.4byte	0x77
 1135 0285 00000000 		.4byte	.LFB14
 1136 0289 18000000 		.4byte	.LFE14-.LFB14
 1137 028d 01       		.uleb128 0x1
 1138 028e 9C       		.byte	0x9c
 1139 028f 0C       		.uleb128 0xc
 1140 0290 58020000 		.4byte	.LASF40
 1141 0294 01       		.byte	0x1
 1142 0295 4A03     		.2byte	0x34a
 1143 0297 77000000 		.4byte	0x77
 1144 029b 00000000 		.4byte	.LFB15
 1145 029f 18000000 		.4byte	.LFE15-.LFB15
 1146 02a3 01       		.uleb128 0x1
 1147 02a4 9C       		.byte	0x9c
 1148 02a5 0C       		.uleb128 0xc
 1149 02a6 D6000000 		.4byte	.LASF41
 1150 02aa 01       		.byte	0x1
 1151 02ab 5E03     		.2byte	0x35e
 1152 02ad 77000000 		.4byte	0x77
 1153 02b1 00000000 		.4byte	.LFB16
 1154 02b5 18000000 		.4byte	.LFE16-.LFB16
 1155 02b9 01       		.uleb128 0x1
 1156 02ba 9C       		.byte	0x9c
 1157 02bb 0C       		.uleb128 0xc
 1158 02bc 6F020000 		.4byte	.LASF42
 1159 02c0 01       		.byte	0x1
 1160 02c1 7403     		.2byte	0x374
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 37


 1161 02c3 77000000 		.4byte	0x77
 1162 02c7 00000000 		.4byte	.LFB17
 1163 02cb 18000000 		.4byte	.LFE17-.LFB17
 1164 02cf 01       		.uleb128 0x1
 1165 02d0 9C       		.byte	0x9c
 1166 02d1 10       		.uleb128 0x10
 1167 02d2 09030000 		.4byte	.LASF47
 1168 02d6 01       		.byte	0x1
 1169 02d7 20       		.byte	0x20
 1170 02d8 6B000000 		.4byte	0x6b
 1171 02dc 05       		.uleb128 0x5
 1172 02dd 03       		.byte	0x3
 1173 02de 00000000 		.4byte	PWM2_initVar
 1174 02e2 00       		.byte	0
 1175              		.section	.debug_abbrev,"",%progbits
 1176              	.Ldebug_abbrev0:
 1177 0000 01       		.uleb128 0x1
 1178 0001 11       		.uleb128 0x11
 1179 0002 01       		.byte	0x1
 1180 0003 25       		.uleb128 0x25
 1181 0004 0E       		.uleb128 0xe
 1182 0005 13       		.uleb128 0x13
 1183 0006 0B       		.uleb128 0xb
 1184 0007 03       		.uleb128 0x3
 1185 0008 0E       		.uleb128 0xe
 1186 0009 1B       		.uleb128 0x1b
 1187 000a 0E       		.uleb128 0xe
 1188 000b 55       		.uleb128 0x55
 1189 000c 17       		.uleb128 0x17
 1190 000d 11       		.uleb128 0x11
 1191 000e 01       		.uleb128 0x1
 1192 000f 10       		.uleb128 0x10
 1193 0010 17       		.uleb128 0x17
 1194 0011 00       		.byte	0
 1195 0012 00       		.byte	0
 1196 0013 02       		.uleb128 0x2
 1197 0014 24       		.uleb128 0x24
 1198 0015 00       		.byte	0
 1199 0016 0B       		.uleb128 0xb
 1200 0017 0B       		.uleb128 0xb
 1201 0018 3E       		.uleb128 0x3e
 1202 0019 0B       		.uleb128 0xb
 1203 001a 03       		.uleb128 0x3
 1204 001b 0E       		.uleb128 0xe
 1205 001c 00       		.byte	0
 1206 001d 00       		.byte	0
 1207 001e 03       		.uleb128 0x3
 1208 001f 24       		.uleb128 0x24
 1209 0020 00       		.byte	0
 1210 0021 0B       		.uleb128 0xb
 1211 0022 0B       		.uleb128 0xb
 1212 0023 3E       		.uleb128 0x3e
 1213 0024 0B       		.uleb128 0xb
 1214 0025 03       		.uleb128 0x3
 1215 0026 08       		.uleb128 0x8
 1216 0027 00       		.byte	0
 1217 0028 00       		.byte	0
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 38


 1218 0029 04       		.uleb128 0x4
 1219 002a 16       		.uleb128 0x16
 1220 002b 00       		.byte	0
 1221 002c 03       		.uleb128 0x3
 1222 002d 0E       		.uleb128 0xe
 1223 002e 3A       		.uleb128 0x3a
 1224 002f 0B       		.uleb128 0xb
 1225 0030 3B       		.uleb128 0x3b
 1226 0031 05       		.uleb128 0x5
 1227 0032 49       		.uleb128 0x49
 1228 0033 13       		.uleb128 0x13
 1229 0034 00       		.byte	0
 1230 0035 00       		.byte	0
 1231 0036 05       		.uleb128 0x5
 1232 0037 35       		.uleb128 0x35
 1233 0038 00       		.byte	0
 1234 0039 49       		.uleb128 0x49
 1235 003a 13       		.uleb128 0x13
 1236 003b 00       		.byte	0
 1237 003c 00       		.byte	0
 1238 003d 06       		.uleb128 0x6
 1239 003e 2E       		.uleb128 0x2e
 1240 003f 00       		.byte	0
 1241 0040 3F       		.uleb128 0x3f
 1242 0041 19       		.uleb128 0x19
 1243 0042 03       		.uleb128 0x3
 1244 0043 0E       		.uleb128 0xe
 1245 0044 3A       		.uleb128 0x3a
 1246 0045 0B       		.uleb128 0xb
 1247 0046 3B       		.uleb128 0x3b
 1248 0047 0B       		.uleb128 0xb
 1249 0048 27       		.uleb128 0x27
 1250 0049 19       		.uleb128 0x19
 1251 004a 11       		.uleb128 0x11
 1252 004b 01       		.uleb128 0x1
 1253 004c 12       		.uleb128 0x12
 1254 004d 06       		.uleb128 0x6
 1255 004e 40       		.uleb128 0x40
 1256 004f 18       		.uleb128 0x18
 1257 0050 9642     		.uleb128 0x2116
 1258 0052 19       		.uleb128 0x19
 1259 0053 00       		.byte	0
 1260 0054 00       		.byte	0
 1261 0055 07       		.uleb128 0x7
 1262 0056 2E       		.uleb128 0x2e
 1263 0057 01       		.byte	0x1
 1264 0058 3F       		.uleb128 0x3f
 1265 0059 19       		.uleb128 0x19
 1266 005a 03       		.uleb128 0x3
 1267 005b 0E       		.uleb128 0xe
 1268 005c 3A       		.uleb128 0x3a
 1269 005d 0B       		.uleb128 0xb
 1270 005e 3B       		.uleb128 0x3b
 1271 005f 0B       		.uleb128 0xb
 1272 0060 27       		.uleb128 0x27
 1273 0061 19       		.uleb128 0x19
 1274 0062 11       		.uleb128 0x11
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 39


 1275 0063 01       		.uleb128 0x1
 1276 0064 12       		.uleb128 0x12
 1277 0065 06       		.uleb128 0x6
 1278 0066 40       		.uleb128 0x40
 1279 0067 18       		.uleb128 0x18
 1280 0068 9642     		.uleb128 0x2116
 1281 006a 19       		.uleb128 0x19
 1282 006b 01       		.uleb128 0x1
 1283 006c 13       		.uleb128 0x13
 1284 006d 00       		.byte	0
 1285 006e 00       		.byte	0
 1286 006f 08       		.uleb128 0x8
 1287 0070 34       		.uleb128 0x34
 1288 0071 00       		.byte	0
 1289 0072 03       		.uleb128 0x3
 1290 0073 0E       		.uleb128 0xe
 1291 0074 3A       		.uleb128 0x3a
 1292 0075 0B       		.uleb128 0xb
 1293 0076 3B       		.uleb128 0x3b
 1294 0077 0B       		.uleb128 0xb
 1295 0078 49       		.uleb128 0x49
 1296 0079 13       		.uleb128 0x13
 1297 007a 02       		.uleb128 0x2
 1298 007b 18       		.uleb128 0x18
 1299 007c 00       		.byte	0
 1300 007d 00       		.byte	0
 1301 007e 09       		.uleb128 0x9
 1302 007f 2E       		.uleb128 0x2e
 1303 0080 00       		.byte	0
 1304 0081 3F       		.uleb128 0x3f
 1305 0082 19       		.uleb128 0x19
 1306 0083 03       		.uleb128 0x3
 1307 0084 0E       		.uleb128 0xe
 1308 0085 3A       		.uleb128 0x3a
 1309 0086 0B       		.uleb128 0xb
 1310 0087 3B       		.uleb128 0x3b
 1311 0088 0B       		.uleb128 0xb
 1312 0089 27       		.uleb128 0x27
 1313 008a 19       		.uleb128 0x19
 1314 008b 11       		.uleb128 0x11
 1315 008c 01       		.uleb128 0x1
 1316 008d 12       		.uleb128 0x12
 1317 008e 06       		.uleb128 0x6
 1318 008f 40       		.uleb128 0x40
 1319 0090 18       		.uleb128 0x18
 1320 0091 9742     		.uleb128 0x2117
 1321 0093 19       		.uleb128 0x19
 1322 0094 00       		.byte	0
 1323 0095 00       		.byte	0
 1324 0096 0A       		.uleb128 0xa
 1325 0097 2E       		.uleb128 0x2e
 1326 0098 01       		.byte	0x1
 1327 0099 3F       		.uleb128 0x3f
 1328 009a 19       		.uleb128 0x19
 1329 009b 03       		.uleb128 0x3
 1330 009c 0E       		.uleb128 0xe
 1331 009d 3A       		.uleb128 0x3a
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 40


 1332 009e 0B       		.uleb128 0xb
 1333 009f 3B       		.uleb128 0x3b
 1334 00a0 05       		.uleb128 0x5
 1335 00a1 27       		.uleb128 0x27
 1336 00a2 19       		.uleb128 0x19
 1337 00a3 11       		.uleb128 0x11
 1338 00a4 01       		.uleb128 0x1
 1339 00a5 12       		.uleb128 0x12
 1340 00a6 06       		.uleb128 0x6
 1341 00a7 40       		.uleb128 0x40
 1342 00a8 18       		.uleb128 0x18
 1343 00a9 9742     		.uleb128 0x2117
 1344 00ab 19       		.uleb128 0x19
 1345 00ac 01       		.uleb128 0x1
 1346 00ad 13       		.uleb128 0x13
 1347 00ae 00       		.byte	0
 1348 00af 00       		.byte	0
 1349 00b0 0B       		.uleb128 0xb
 1350 00b1 05       		.uleb128 0x5
 1351 00b2 00       		.byte	0
 1352 00b3 03       		.uleb128 0x3
 1353 00b4 0E       		.uleb128 0xe
 1354 00b5 3A       		.uleb128 0x3a
 1355 00b6 0B       		.uleb128 0xb
 1356 00b7 3B       		.uleb128 0x3b
 1357 00b8 05       		.uleb128 0x5
 1358 00b9 49       		.uleb128 0x49
 1359 00ba 13       		.uleb128 0x13
 1360 00bb 02       		.uleb128 0x2
 1361 00bc 18       		.uleb128 0x18
 1362 00bd 00       		.byte	0
 1363 00be 00       		.byte	0
 1364 00bf 0C       		.uleb128 0xc
 1365 00c0 2E       		.uleb128 0x2e
 1366 00c1 00       		.byte	0
 1367 00c2 3F       		.uleb128 0x3f
 1368 00c3 19       		.uleb128 0x19
 1369 00c4 03       		.uleb128 0x3
 1370 00c5 0E       		.uleb128 0xe
 1371 00c6 3A       		.uleb128 0x3a
 1372 00c7 0B       		.uleb128 0xb
 1373 00c8 3B       		.uleb128 0x3b
 1374 00c9 05       		.uleb128 0x5
 1375 00ca 27       		.uleb128 0x27
 1376 00cb 19       		.uleb128 0x19
 1377 00cc 49       		.uleb128 0x49
 1378 00cd 13       		.uleb128 0x13
 1379 00ce 11       		.uleb128 0x11
 1380 00cf 01       		.uleb128 0x1
 1381 00d0 12       		.uleb128 0x12
 1382 00d1 06       		.uleb128 0x6
 1383 00d2 40       		.uleb128 0x40
 1384 00d3 18       		.uleb128 0x18
 1385 00d4 9742     		.uleb128 0x2117
 1386 00d6 19       		.uleb128 0x19
 1387 00d7 00       		.byte	0
 1388 00d8 00       		.byte	0
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 41


 1389 00d9 0D       		.uleb128 0xd
 1390 00da 2E       		.uleb128 0x2e
 1391 00db 00       		.byte	0
 1392 00dc 3F       		.uleb128 0x3f
 1393 00dd 19       		.uleb128 0x19
 1394 00de 03       		.uleb128 0x3
 1395 00df 0E       		.uleb128 0xe
 1396 00e0 3A       		.uleb128 0x3a
 1397 00e1 0B       		.uleb128 0xb
 1398 00e2 3B       		.uleb128 0x3b
 1399 00e3 05       		.uleb128 0x5
 1400 00e4 27       		.uleb128 0x27
 1401 00e5 19       		.uleb128 0x19
 1402 00e6 11       		.uleb128 0x11
 1403 00e7 01       		.uleb128 0x1
 1404 00e8 12       		.uleb128 0x12
 1405 00e9 06       		.uleb128 0x6
 1406 00ea 40       		.uleb128 0x40
 1407 00eb 18       		.uleb128 0x18
 1408 00ec 9642     		.uleb128 0x2116
 1409 00ee 19       		.uleb128 0x19
 1410 00ef 00       		.byte	0
 1411 00f0 00       		.byte	0
 1412 00f1 0E       		.uleb128 0xe
 1413 00f2 2E       		.uleb128 0x2e
 1414 00f3 01       		.byte	0x1
 1415 00f4 3F       		.uleb128 0x3f
 1416 00f5 19       		.uleb128 0x19
 1417 00f6 03       		.uleb128 0x3
 1418 00f7 0E       		.uleb128 0xe
 1419 00f8 3A       		.uleb128 0x3a
 1420 00f9 0B       		.uleb128 0xb
 1421 00fa 3B       		.uleb128 0x3b
 1422 00fb 05       		.uleb128 0x5
 1423 00fc 27       		.uleb128 0x27
 1424 00fd 19       		.uleb128 0x19
 1425 00fe 49       		.uleb128 0x49
 1426 00ff 13       		.uleb128 0x13
 1427 0100 11       		.uleb128 0x11
 1428 0101 01       		.uleb128 0x1
 1429 0102 12       		.uleb128 0x12
 1430 0103 06       		.uleb128 0x6
 1431 0104 40       		.uleb128 0x40
 1432 0105 18       		.uleb128 0x18
 1433 0106 9742     		.uleb128 0x2117
 1434 0108 19       		.uleb128 0x19
 1435 0109 01       		.uleb128 0x1
 1436 010a 13       		.uleb128 0x13
 1437 010b 00       		.byte	0
 1438 010c 00       		.byte	0
 1439 010d 0F       		.uleb128 0xf
 1440 010e 34       		.uleb128 0x34
 1441 010f 00       		.byte	0
 1442 0110 03       		.uleb128 0x3
 1443 0111 0E       		.uleb128 0xe
 1444 0112 3A       		.uleb128 0x3a
 1445 0113 0B       		.uleb128 0xb
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 42


 1446 0114 3B       		.uleb128 0x3b
 1447 0115 05       		.uleb128 0x5
 1448 0116 49       		.uleb128 0x49
 1449 0117 13       		.uleb128 0x13
 1450 0118 02       		.uleb128 0x2
 1451 0119 18       		.uleb128 0x18
 1452 011a 00       		.byte	0
 1453 011b 00       		.byte	0
 1454 011c 10       		.uleb128 0x10
 1455 011d 34       		.uleb128 0x34
 1456 011e 00       		.byte	0
 1457 011f 03       		.uleb128 0x3
 1458 0120 0E       		.uleb128 0xe
 1459 0121 3A       		.uleb128 0x3a
 1460 0122 0B       		.uleb128 0xb
 1461 0123 3B       		.uleb128 0x3b
 1462 0124 0B       		.uleb128 0xb
 1463 0125 49       		.uleb128 0x49
 1464 0126 13       		.uleb128 0x13
 1465 0127 3F       		.uleb128 0x3f
 1466 0128 19       		.uleb128 0x19
 1467 0129 02       		.uleb128 0x2
 1468 012a 18       		.uleb128 0x18
 1469 012b 00       		.byte	0
 1470 012c 00       		.byte	0
 1471 012d 00       		.byte	0
 1472              		.section	.debug_aranges,"",%progbits
 1473 0000 A4000000 		.4byte	0xa4
 1474 0004 0200     		.2byte	0x2
 1475 0006 00000000 		.4byte	.Ldebug_info0
 1476 000a 04       		.byte	0x4
 1477 000b 00       		.byte	0
 1478 000c 0000     		.2byte	0
 1479 000e 0000     		.2byte	0
 1480 0010 00000000 		.4byte	.LFB0
 1481 0014 24000000 		.4byte	.LFE0-.LFB0
 1482 0018 00000000 		.4byte	.LFB1
 1483 001c 98000000 		.4byte	.LFE1-.LFB1
 1484 0020 00000000 		.4byte	.LFB2
 1485 0024 20000000 		.4byte	.LFE2-.LFB2
 1486 0028 00000000 		.4byte	.LFB3
 1487 002c 20000000 		.4byte	.LFE3-.LFB3
 1488 0030 00000000 		.4byte	.LFB4
 1489 0034 20000000 		.4byte	.LFE4-.LFB4
 1490 0038 00000000 		.4byte	.LFB5
 1491 003c 20000000 		.4byte	.LFE5-.LFB5
 1492 0040 00000000 		.4byte	.LFB6
 1493 0044 1C000000 		.4byte	.LFE6-.LFB6
 1494 0048 00000000 		.4byte	.LFB7
 1495 004c 20000000 		.4byte	.LFE7-.LFB7
 1496 0050 00000000 		.4byte	.LFB8
 1497 0054 20000000 		.4byte	.LFE8-.LFB8
 1498 0058 00000000 		.4byte	.LFB9
 1499 005c 20000000 		.4byte	.LFE9-.LFB9
 1500 0060 00000000 		.4byte	.LFB10
 1501 0064 20000000 		.4byte	.LFE10-.LFB10
 1502 0068 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 43


 1503 006c 18000000 		.4byte	.LFE11-.LFB11
 1504 0070 00000000 		.4byte	.LFB12
 1505 0074 1C000000 		.4byte	.LFE12-.LFB12
 1506 0078 00000000 		.4byte	.LFB13
 1507 007c 20000000 		.4byte	.LFE13-.LFB13
 1508 0080 00000000 		.4byte	.LFB14
 1509 0084 18000000 		.4byte	.LFE14-.LFB14
 1510 0088 00000000 		.4byte	.LFB15
 1511 008c 18000000 		.4byte	.LFE15-.LFB15
 1512 0090 00000000 		.4byte	.LFB16
 1513 0094 18000000 		.4byte	.LFE16-.LFB16
 1514 0098 00000000 		.4byte	.LFB17
 1515 009c 18000000 		.4byte	.LFE17-.LFB17
 1516 00a0 00000000 		.4byte	0
 1517 00a4 00000000 		.4byte	0
 1518              		.section	.debug_ranges,"",%progbits
 1519              	.Ldebug_ranges0:
 1520 0000 00000000 		.4byte	.LFB0
 1521 0004 24000000 		.4byte	.LFE0
 1522 0008 00000000 		.4byte	.LFB1
 1523 000c 98000000 		.4byte	.LFE1
 1524 0010 00000000 		.4byte	.LFB2
 1525 0014 20000000 		.4byte	.LFE2
 1526 0018 00000000 		.4byte	.LFB3
 1527 001c 20000000 		.4byte	.LFE3
 1528 0020 00000000 		.4byte	.LFB4
 1529 0024 20000000 		.4byte	.LFE4
 1530 0028 00000000 		.4byte	.LFB5
 1531 002c 20000000 		.4byte	.LFE5
 1532 0030 00000000 		.4byte	.LFB6
 1533 0034 1C000000 		.4byte	.LFE6
 1534 0038 00000000 		.4byte	.LFB7
 1535 003c 20000000 		.4byte	.LFE7
 1536 0040 00000000 		.4byte	.LFB8
 1537 0044 20000000 		.4byte	.LFE8
 1538 0048 00000000 		.4byte	.LFB9
 1539 004c 20000000 		.4byte	.LFE9
 1540 0050 00000000 		.4byte	.LFB10
 1541 0054 20000000 		.4byte	.LFE10
 1542 0058 00000000 		.4byte	.LFB11
 1543 005c 18000000 		.4byte	.LFE11
 1544 0060 00000000 		.4byte	.LFB12
 1545 0064 1C000000 		.4byte	.LFE12
 1546 0068 00000000 		.4byte	.LFB13
 1547 006c 20000000 		.4byte	.LFE13
 1548 0070 00000000 		.4byte	.LFB14
 1549 0074 18000000 		.4byte	.LFE14
 1550 0078 00000000 		.4byte	.LFB15
 1551 007c 18000000 		.4byte	.LFE15
 1552 0080 00000000 		.4byte	.LFB16
 1553 0084 18000000 		.4byte	.LFE16
 1554 0088 00000000 		.4byte	.LFB17
 1555 008c 18000000 		.4byte	.LFE17
 1556 0090 00000000 		.4byte	0
 1557 0094 00000000 		.4byte	0
 1558              		.section	.debug_line,"",%progbits
 1559              	.Ldebug_line0:
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 44


 1560 0000 A7010000 		.section	.debug_str,"MS",%progbits,1
 1560      02004100 
 1560      00000201 
 1560      FB0E0D00 
 1560      01010101 
 1561              	.LASF15:
 1562 0000 72656731 		.ascii	"reg16\000"
 1562      3600
 1563              	.LASF43:
 1564 0006 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1564      43313120 
 1564      352E342E 
 1564      31203230 
 1564      31363036 
 1565 0039 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1565      20726576 
 1565      6973696F 
 1565      6E203233 
 1565      37373135 
 1566 006c 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1566      66756E63 
 1566      74696F6E 
 1566      2D736563 
 1566      74696F6E 
 1567              	.LASF24:
 1568 0094 50574D32 		.ascii	"PWM2_WriteCounter\000"
 1568      5F577269 
 1568      7465436F 
 1568      756E7465 
 1568      7200
 1569              	.LASF28:
 1570 00a6 70657269 		.ascii	"period\000"
 1570      6F6400
 1571              	.LASF3:
 1572 00ad 73686F72 		.ascii	"short unsigned int\000"
 1572      7420756E 
 1572      7369676E 
 1572      65642069 
 1572      6E7400
 1573              	.LASF32:
 1574 00c0 50574D32 		.ascii	"PWM2_SetInterruptMode\000"
 1574      5F536574 
 1574      496E7465 
 1574      72727570 
 1574      744D6F64 
 1575              	.LASF41:
 1576 00d6 50574D32 		.ascii	"PWM2_ReadCompare2\000"
 1576      5F526561 
 1576      64436F6D 
 1576      70617265 
 1576      3200
 1577              	.LASF23:
 1578 00e8 50574D32 		.ascii	"PWM2_Init\000"
 1578      5F496E69 
 1578      7400
 1579              	.LASF11:
 1580 00f2 666C6F61 		.ascii	"float\000"
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 45


 1580      7400
 1581              	.LASF27:
 1582 00f8 636F756E 		.ascii	"counter\000"
 1582      74657200 
 1583              	.LASF46:
 1584 0100 50574D32 		.ascii	"PWM2_ReadControlRegister\000"
 1584      5F526561 
 1584      64436F6E 
 1584      74726F6C 
 1584      52656769 
 1585              	.LASF26:
 1586 0119 50574D32 		.ascii	"PWM2_WritePeriod\000"
 1586      5F577269 
 1586      74655065 
 1586      72696F64 
 1586      00
 1587              	.LASF21:
 1588 012a 50574D32 		.ascii	"PWM2_Enable\000"
 1588      5F456E61 
 1588      626C6500 
 1589              	.LASF1:
 1590 0136 756E7369 		.ascii	"unsigned char\000"
 1590      676E6564 
 1590      20636861 
 1590      7200
 1591              	.LASF14:
 1592 0144 72656738 		.ascii	"reg8\000"
 1592      00
 1593              	.LASF5:
 1594 0149 6C6F6E67 		.ascii	"long unsigned int\000"
 1594      20756E73 
 1594      69676E65 
 1594      6420696E 
 1594      7400
 1595              	.LASF9:
 1596 015b 75696E74 		.ascii	"uint8\000"
 1596      3800
 1597              	.LASF38:
 1598 0161 636F6E74 		.ascii	"control\000"
 1598      726F6C00 
 1599              	.LASF12:
 1600 0169 646F7562 		.ascii	"double\000"
 1600      6C6500
 1601              	.LASF2:
 1602 0170 73686F72 		.ascii	"short int\000"
 1602      7420696E 
 1602      7400
 1603              	.LASF10:
 1604 017a 75696E74 		.ascii	"uint16\000"
 1604      313600
 1605              	.LASF19:
 1606 0181 50574D32 		.ascii	"PWM2_interruptState\000"
 1606      5F696E74 
 1606      65727275 
 1606      70745374 
 1606      61746500 
 1607              	.LASF22:
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 46


 1608 0195 50574D32 		.ascii	"PWM2_Stop\000"
 1608      5F53746F 
 1608      7000
 1609              	.LASF37:
 1610 019f 50574D32 		.ascii	"PWM2_WriteControlRegister\000"
 1610      5F577269 
 1610      7465436F 
 1610      6E74726F 
 1610      6C526567 
 1611              	.LASF8:
 1612 01b9 756E7369 		.ascii	"unsigned int\000"
 1612      676E6564 
 1612      20696E74 
 1612      00
 1613              	.LASF45:
 1614 01c6 433A5C55 		.ascii	"C:\\Users\\elias\\OneDrive\\Documents\\Documentos\\"
 1614      73657273 
 1614      5C656C69 
 1614      61735C4F 
 1614      6E654472 
 1615 01f3 50536F43 		.ascii	"PSoC Creator\\TPF\\Micro1.cydsn\000"
 1615      20437265 
 1615      61746F72 
 1615      5C545046 
 1615      5C4D6963 
 1616              	.LASF7:
 1617 0211 6C6F6E67 		.ascii	"long long unsigned int\000"
 1617      206C6F6E 
 1617      6720756E 
 1617      7369676E 
 1617      65642069 
 1618              	.LASF44:
 1619 0228 47656E65 		.ascii	"Generated_Source\\PSoC5\\PWM2.c\000"
 1619      72617465 
 1619      645F536F 
 1619      75726365 
 1619      5C50536F 
 1620              	.LASF36:
 1621 0246 72657375 		.ascii	"result\000"
 1621      6C7400
 1622              	.LASF20:
 1623 024d 50574D32 		.ascii	"PWM2_Start\000"
 1623      5F537461 
 1623      727400
 1624              	.LASF40:
 1625 0258 50574D32 		.ascii	"PWM2_ReadCompare1\000"
 1625      5F526561 
 1625      64436F6D 
 1625      70617265 
 1625      3100
 1626              	.LASF18:
 1627 026a 6374726C 		.ascii	"ctrl\000"
 1627      00
 1628              	.LASF42:
 1629 026f 50574D32 		.ascii	"PWM2_ReadPeriod\000"
 1629      5F526561 
 1629      64506572 
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 47


 1629      696F6400 
 1630              	.LASF17:
 1631 027f 73697A65 		.ascii	"sizetype\000"
 1631      74797065 
 1631      00
 1632              	.LASF6:
 1633 0288 6C6F6E67 		.ascii	"long long int\000"
 1633      206C6F6E 
 1633      6720696E 
 1633      7400
 1634              	.LASF33:
 1635 0296 696E7465 		.ascii	"interruptMode\000"
 1635      72727570 
 1635      744D6F64 
 1635      6500
 1636              	.LASF39:
 1637 02a4 50574D32 		.ascii	"PWM2_ReadCapture\000"
 1637      5F526561 
 1637      64436170 
 1637      74757265 
 1637      00
 1638              	.LASF31:
 1639 02b5 50574D32 		.ascii	"PWM2_WriteCompare2\000"
 1639      5F577269 
 1639      7465436F 
 1639      6D706172 
 1639      653200
 1640              	.LASF4:
 1641 02c8 6C6F6E67 		.ascii	"long int\000"
 1641      20696E74 
 1641      00
 1642              	.LASF13:
 1643 02d1 63686172 		.ascii	"char\000"
 1643      00
 1644              	.LASF29:
 1645 02d6 50574D32 		.ascii	"PWM2_WriteCompare1\000"
 1645      5F577269 
 1645      7465436F 
 1645      6D706172 
 1645      653100
 1646              	.LASF16:
 1647 02e9 6C6F6E67 		.ascii	"long double\000"
 1647      20646F75 
 1647      626C6500 
 1648              	.LASF0:
 1649 02f5 7369676E 		.ascii	"signed char\000"
 1649      65642063 
 1649      68617200 
 1650              	.LASF30:
 1651 0301 636F6D70 		.ascii	"compare\000"
 1651      61726500 
 1652              	.LASF47:
 1653 0309 50574D32 		.ascii	"PWM2_initVar\000"
 1653      5F696E69 
 1653      74566172 
 1653      00
 1654              	.LASF25:
ARM GAS  C:\Users\elias\AppData\Local\Temp\ccQpCNt0.s 			page 48


 1655 0316 50574D32 		.ascii	"PWM2_ClearFIFO\000"
 1655      5F436C65 
 1655      61724649 
 1655      464F00
 1656              	.LASF34:
 1657 0325 50574D32 		.ascii	"PWM2_ReadCounter\000"
 1657      5F526561 
 1657      64436F75 
 1657      6E746572 
 1657      00
 1658              	.LASF35:
 1659 0336 50574D32 		.ascii	"PWM2_ReadStatusRegister\000"
 1659      5F526561 
 1659      64537461 
 1659      74757352 
 1659      65676973 
 1660              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
